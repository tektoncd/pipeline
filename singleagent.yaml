steps:
- id: 'BugHunterAgent'
  name: 'gcr.io/$PROJECT_ID/gemini-cli-node20:latest'
  waitFor: ['-'] # Run in parallel
  secretEnv: ['GEMINI_API_KEY', 'GITHUB_PAT']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -ex
    git config --global user.email "cloud-build-bot@google.com"
    git config --global user.name "Cloud Build Bot (Bug Hunter)"
    git checkout -b "BugHunterAgent-${BUILD_ID}"
    gemini --prompt "You are a senior engineering agent. Analyze the code within the '${_DIRECTORY}' directory for potential bugs, including race conditions, null pointer exceptions, and logical flaws. If you find any, modify the code to fix them directly." --approval-mode=yolo
    # Only commit and push if the agent made changes
    if ! git diff --quiet; then
      git add .
      git commit -m "fix(ai): Automated bug fixes from BugHunterAgent in ${_DIRECTORY}"
      git push https://$$GITHUB_PAT@github.com/${_GITHUB_REPO_OWNER}/${_GITHUB_REPO_NAME}.git "BugHunterAgent-${BUILD_ID}"
    else
      echo "BugHunterAgent found no issues to fix in ${_DIRECTORY}."
    fi

# This new step runs 'ls' every 5 seconds for 5 minutes.
- id: 'ContinuousListAgent'
  name: 'ubuntu'
  waitFor: ['-'] # Run in parallel
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      echo "This step will list files every 5 seconds for 5 minutes."
      end_time=$$(($$(date +%s) + 300)) # 300 seconds = 5 minutes
      while [ $$(date +%s) -lt $$end_time ]; do
        echo "--- Listing files at $$(date) ---"
        ls -la
        sleep 5
      done
      echo "5 minutes have passed. Step complete."    

# --- Configuration ---

# Secrets to make available as environment variables for all steps.
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/$_SECRET_NAME_GEMINI/versions/latest
    env: 'GEMINI_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/$_SECRET_NAME_GITHUB/versions/latest
    env: 'GITHUB_PAT'

# User-defined substitutions to pass variables into the build.
substitutions:
  _SECRET_NAME_GEMINI: 'ed-gemini-argo-local-edrienne-key'
  _SECRET_NAME_GITHUB: 'ed-tekton-pipelines-token'
  _GITHUB_REPO_OWNER: 'codrienne'
  _GITHUB_REPO_NAME: 'tekton-pipelines'
  _DIRECTORY: 'pkg/apis/pipeline/v1' # The directory for the agents to focus on.
