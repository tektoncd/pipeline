# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: pipelineruns.tekton.dev
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: "devel"
    version: "devel"
spec:
  group: tekton.dev
  preserveUnknownFields: false
  versions:
    - name: v1beta1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          description: |-
            PipelineRun represents a single execution of a Pipeline. PipelineRuns are how
            the graph of Tasks declared in a Pipeline are executed; they specify inputs
            to Pipelines such as parameter values and capture operational aspects of the
            Tasks execution such as service account and tolerations. Creating a
            PipelineRun creates TaskRuns for Tasks in the referenced Pipeline.

            Deprecated: Please use v1.PipelineRun instead.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PipelineRunSpec defines the desired state of PipelineRun
              type: object
              properties:
                params:
                  description: Params is a list of parameter names and values.
                  type: array
                  items:
                    description: Param declares an ParamValues to use for the parameter called name.
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                pipelineRef:
                  description: PipelineRef can be used to refer to a specific instance of a Pipeline.
                  type: object
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    bundle:
                      description: |-
                        Bundle url reference to a Tekton Bundle.

                        Deprecated: Please use ResolverRef with the bundles resolver instead.
                        The field is staying there for go client backward compatibility, but is not used/allowed anymore.
                      type: string
                    name:
                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    params:
                      description: |-
                        Params contains the parameters used to identify the
                        referenced Tekton resource. Example entries might include
                        "repo" or "path" but the set of params ultimately depends on
                        the chosen resolver.
                      type: array
                      items:
                        description: Param declares an ParamValues to use for the parameter called name.
                        type: object
                        required:
                          - name
                          - value
                        properties:
                          name:
                            type: string
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                      x-kubernetes-list-type: atomic
                    resolver:
                      description: |-
                        Resolver is the name of the resolver that should perform
                        resolution of the referenced Tekton resource, such as "git".
                      type: string
                pipelineSpec:
                  description: |-
                    Specifying PipelineSpec can be disabled by setting
                    `disable-inline-spec` feature flag.
                    See Pipeline.spec (API version: tekton.dev/v1beta1)
                  x-kubernetes-preserve-unknown-fields: true
                podTemplate:
                  description: PodTemplate holds pod specific configuration
                  type: object
                  properties:
                    affinity:
                      description: |-
                        If specified, the pod's scheduling constraints.
                        See Pod.spec.affinity (API version: v1)
                      x-kubernetes-preserve-unknown-fields: true
                    automountServiceAccountToken:
                      description: |-
                        AutomountServiceAccountToken indicates whether pods running as this
                        service account should have an API token automatically mounted.
                      type: boolean
                    dnsConfig:
                      description: |-
                        Specifies the DNS parameters of a pod.
                        Parameters specified here will be merged to the generated DNS
                        configuration based on DNSPolicy.
                      type: object
                      properties:
                        nameservers:
                          description: |-
                            A list of DNS name server IP addresses.
                            This will be appended to the base nameservers generated from DNSPolicy.
                            Duplicated nameservers will be removed.
                          type: array
                          items:
                            type: string
                          x-kubernetes-list-type: atomic
                        options:
                          description: |-
                            A list of DNS resolver options.
                            This will be merged with the base options generated from DNSPolicy.
                            Duplicated entries will be removed. Resolution options given in Options
                            will override those that appear in the base DNSPolicy.
                          type: array
                          items:
                            description: PodDNSConfigOption defines DNS resolver options of a pod.
                            type: object
                            properties:
                              name:
                                description: Required.
                                type: string
                              value:
                                type: string
                          x-kubernetes-list-type: atomic
                        searches:
                          description: |-
                            A list of DNS search domains for host-name lookup.
                            This will be appended to the base search paths generated from DNSPolicy.
                            Duplicated search paths will be removed.
                          type: array
                          items:
                            type: string
                          x-kubernetes-list-type: atomic
                    dnsPolicy:
                      description: |-
                        Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                        'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                        will be merged with the policy selected with DNSPolicy.
                      type: string
                    enableServiceLinks:
                      description: |-
                        EnableServiceLinks indicates whether information about services should be injected into pod's
                        environment variables, matching the syntax of Docker links.
                        Optional: Defaults to true.
                      type: boolean
                    env:
                      description: List of environment variables that can be provided to the containers belonging to the pod.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                    default: ""
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                    default: ""
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                x-kubernetes-map-type: atomic
                      x-kubernetes-list-type: atomic
                    hostAliases:
                      description: |-
                        HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                        file if specified. This is only valid for non-hostNetwork pods.
                      type: array
                      items:
                        description: |-
                          HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                          pod's hosts file.
                        type: object
                        required:
                          - ip
                        properties:
                          hostnames:
                            description: Hostnames for the above IP address.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          ip:
                            description: IP address of the host file entry.
                            type: string
                      x-kubernetes-list-type: atomic
                    hostNetwork:
                      description: HostNetwork specifies whether the pod may use the node network namespace
                      type: boolean
                    imagePullSecrets:
                      description: ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified
                      type: array
                      items:
                        description: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                        type: object
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                            default: ""
                        x-kubernetes-map-type: atomic
                      x-kubernetes-list-type: atomic
                    nodeSelector:
                      description: |-
                        NodeSelector is a selector which must be true for the pod to fit on a node.
                        Selector which must match a node's labels for the pod to be scheduled on that node.
                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                      type: object
                      additionalProperties:
                        type: string
                    priorityClassName:
                      description: |-
                        If specified, indicates the pod's priority. "system-node-critical" and
                        "system-cluster-critical" are two special keywords which indicate the
                        highest priorities with the former being the highest priority. Any other
                        name must be defined by creating a PriorityClass object with that name.
                        If not specified, the pod priority will be default or zero if there is no
                        default.
                      type: string
                    runtimeClassName:
                      description: |-
                        RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                        group, which should be used to run this pod. If no RuntimeClass resource
                        matches the named class, the pod will not be run. If unset or empty, the
                        "legacy" RuntimeClass will be used, which is an implicit class with an
                        empty definition that uses the default runtime handler.
                        More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                        This is a beta feature as of Kubernetes v1.14.
                      type: string
                    schedulerName:
                      description: SchedulerName specifies the scheduler to be used to dispatch the Pod
                      type: string
                    securityContext:
                      description: |-
                        SecurityContext holds pod-level security attributes and common container settings.
                        Optional: Defaults to empty.  See type description for default values of each field.
                      type: object
                      properties:
                        appArmorProfile:
                          description: |-
                            appArmorProfile is the AppArmor options to use by the containers in this pod.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: object
                          required:
                            - type
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile loaded on the node that should be used.
                                The profile must be preconfigured on the node to work.
                                Must match the loaded name of the profile.
                                Must be set if and only if type is "Localhost".
                              type: string
                            type:
                              description: |-
                                type indicates which kind of AppArmor profile will be applied.
                                Valid options are:
                                  Localhost - a profile pre-loaded on the node.
                                  RuntimeDefault - the container runtime's default profile.
                                  Unconfined - no AppArmor enforcement.
                              type: string
                        fsGroup:
                          description: |-
                            A special supplemental group that applies to all containers in a pod.
                            Some volume types allow the Kubelet to change the ownership of that volume
                            to be owned by the pod:

                            1. The owning GID will be the FSGroup
                            2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                            3. The permission bits are OR'd with rw-rw----

                            If unset, the Kubelet will not modify the ownership and permissions of any volume.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: integer
                          format: int64
                        fsGroupChangePolicy:
                          description: |-
                            fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                            before being exposed inside Pod. This field will only apply to
                            volume types which support fsGroup based ownership(and permissions).
                            It will have no effect on ephemeral volume types such as: secret, configmaps
                            and emptydir.
                            Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        runAsGroup:
                          description: |-
                            The GID to run the entrypoint of the container process.
                            Uses runtime default if unset.
                            May also be set in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence
                            for that container.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: integer
                          format: int64
                        runAsNonRoot:
                          description: |-
                            Indicates that the container must run as a non-root user.
                            If true, the Kubelet will validate the image at runtime to ensure that it
                            does not run as UID 0 (root) and fail to start the container if it does.
                            If unset or false, no such validation will be performed.
                            May also be set in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: |-
                            The UID to run the entrypoint of the container process.
                            Defaults to user specified in image metadata if unspecified.
                            May also be set in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence
                            for that container.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: integer
                          format: int64
                        seLinuxOptions:
                          description: |-
                            The SELinux context to be applied to all containers.
                            If unspecified, the container runtime will allocate a random SELinux context for each
                            container.  May also be set in SecurityContext.  If set in
                            both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: object
                          properties:
                            level:
                              description: Level is SELinux level label that applies to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies to the container.
                              type: string
                        seccompProfile:
                          description: |-
                            The seccomp options to use by the containers in this pod.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: object
                          required:
                            - type
                          properties:
                            localhostProfile:
                              description: |-
                                localhostProfile indicates a profile defined in a file on the node should be used.
                                The profile must be preconfigured on the node to work.
                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                Must be set if type is "Localhost". Must NOT be set for any other type.
                              type: string
                            type:
                              description: |-
                                type indicates which kind of seccomp profile will be applied.
                                Valid options are:

                                Localhost - a profile defined in a file on the node should be used.
                                RuntimeDefault - the container runtime default profile should be used.
                                Unconfined - no profile should be applied.
                              type: string
                        supplementalGroups:
                          description: |-
                            A list of groups applied to the first process run in each container, in
                            addition to the container's primary GID and fsGroup (if specified).  If
                            the SupplementalGroupsPolicy feature is enabled, the
                            supplementalGroupsPolicy field determines whether these are in addition
                            to or instead of any group memberships defined in the container image.
                            If unspecified, no additional groups are added, though group memberships
                            defined in the container image may still be used, depending on the
                            supplementalGroupsPolicy field.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: array
                          items:
                            type: integer
                            format: int64
                          x-kubernetes-list-type: atomic
                        supplementalGroupsPolicy:
                          description: |-
                            Defines how supplemental groups of the first container processes are calculated.
                            Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                            (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                            and the container runtime must implement support for this feature.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: string
                        sysctls:
                          description: |-
                            Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                            sysctls (by the container runtime) might fail to launch.
                            Note that this field cannot be set when spec.os.name is windows.
                          type: array
                          items:
                            description: Sysctl defines a kernel parameter to be set
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                description: Name of a property to set
                                type: string
                              value:
                                description: Value of a property to set
                                type: string
                          x-kubernetes-list-type: atomic
                        windowsOptions:
                          description: |-
                            The Windows specific settings applied to all containers.
                            If unspecified, the options within a container's SecurityContext will be used.
                            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                            Note that this field cannot be set when spec.os.name is linux.
                          type: object
                          properties:
                            gmsaCredentialSpec:
                              description: |-
                                GMSACredentialSpec is where the GMSA admission webhook
                                (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                GMSA credential spec named by the GMSACredentialSpecName field.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                              type: string
                            hostProcess:
                              description: |-
                                HostProcess determines if a container should be run as a 'Host Process' container.
                                All of a Pod's containers must have the same effective HostProcess value
                                (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                In addition, if HostProcess is true then HostNetwork must also be set to true.
                              type: boolean
                            runAsUserName:
                              description: |-
                                The UserName in Windows to run the entrypoint of the container process.
                                Defaults to the user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext. If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: string
                    tolerations:
                      description: If specified, the pod's tolerations.
                      type: array
                      items:
                        description: |-
                          The pod this Toleration is attached to tolerates any taint that matches
                          the triple <key,value,effect> using the matching operator <operator>.
                        type: object
                        properties:
                          effect:
                            description: |-
                              Effect indicates the taint effect to match. Empty means match all taint effects.
                              When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: |-
                              Key is the taint key that the toleration applies to. Empty means match all taint keys.
                              If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                            type: string
                          operator:
                            description: |-
                              Operator represents a key's relationship to the value.
                              Valid operators are Exists and Equal. Defaults to Equal.
                              Exists is equivalent to wildcard for value, so that a pod can
                              tolerate all taints of a particular category.
                            type: string
                          tolerationSeconds:
                            description: |-
                              TolerationSeconds represents the period of time the toleration (which must be
                              of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                              it is not set, which means tolerate the taint forever (do not evict). Zero and
                              negative values will be treated as 0 (evict immediately) by the system.
                            type: integer
                            format: int64
                          value:
                            description: |-
                              Value is the taint value the toleration matches to.
                              If the operator is Exists, the value should be empty, otherwise just a regular string.
                            type: string
                      x-kubernetes-list-type: atomic
                    topologySpreadConstraints:
                      description: |-
                        TopologySpreadConstraints controls how Pods are spread across your cluster among
                        failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                      type: array
                      items:
                        description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                        type: object
                        required:
                          - maxSkew
                          - topologyKey
                          - whenUnsatisfiable
                        properties:
                          labelSelector:
                            description: |-
                              LabelSelector is used to find matching pods.
                              Pods that match this label selector are counted to determine the number of pods
                              in their corresponding topology domain.
                            type: object
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                type: array
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  type: object
                                  required:
                                    - key
                                    - operator
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      type: array
                                      items:
                                        type: string
                                      x-kubernetes-list-type: atomic
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                                additionalProperties:
                                  type: string
                            x-kubernetes-map-type: atomic
                          matchLabelKeys:
                            description: |-
                              MatchLabelKeys is a set of pod label keys to select the pods over which
                              spreading will be calculated. The keys are used to lookup values from the
                              incoming pod labels, those key-value labels are ANDed with labelSelector
                              to select the group of existing pods over which spreading will be calculated
                              for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                              MatchLabelKeys cannot be set when LabelSelector isn't set.
                              Keys that don't exist in the incoming pod labels will
                              be ignored. A null or empty list means only match against labelSelector.

                              This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          maxSkew:
                            description: |-
                              MaxSkew describes the degree to which pods may be unevenly distributed.
                              When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                              between the number of matching pods in the target topology and the global minimum.
                              The global minimum is the minimum number of matching pods in an eligible domain
                              or zero if the number of eligible domains is less than MinDomains.
                              For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                              labelSelector spread as 2/2/1:
                              In this case, the global minimum is 1.
                              | zone1 | zone2 | zone3 |
                              |  P P  |  P P  |   P   |
                              - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                              scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                              violate MaxSkew(1).
                              - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                              When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                              to topologies that satisfy it.
                              It's a required field. Default value is 1 and 0 is not allowed.
                            type: integer
                            format: int32
                          minDomains:
                            description: |-
                              MinDomains indicates a minimum number of eligible domains.
                              When the number of eligible domains with matching topology keys is less than minDomains,
                              Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                              And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                              this value has no effect on scheduling.
                              As a result, when the number of eligible domains is less than minDomains,
                              scheduler won't schedule more than maxSkew Pods to those domains.
                              If value is nil, the constraint behaves as if MinDomains is equal to 1.
                              Valid values are integers greater than 0.
                              When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                              For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                              labelSelector spread as 2/2/2:
                              | zone1 | zone2 | zone3 |
                              |  P P  |  P P  |  P P  |
                              The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                              In this situation, new pod with the same labelSelector cannot be scheduled,
                              because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                              it will violate MaxSkew.
                            type: integer
                            format: int32
                          nodeAffinityPolicy:
                            description: |-
                              NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                              when calculating pod topology spread skew. Options are:
                              - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                              - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                              If this value is nil, the behavior is equivalent to the Honor policy.
                              This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                            type: string
                          nodeTaintsPolicy:
                            description: |-
                              NodeTaintsPolicy indicates how we will treat node taints when calculating
                              pod topology spread skew. Options are:
                              - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                              has a toleration, are included.
                              - Ignore: node taints are ignored. All nodes are included.

                              If this value is nil, the behavior is equivalent to the Ignore policy.
                              This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                            type: string
                          topologyKey:
                            description: |-
                              TopologyKey is the key of node labels. Nodes that have a label with this key
                              and identical values are considered to be in the same topology.
                              We consider each <key, value> as a "bucket", and try to put balanced number
                              of pods into each bucket.
                              We define a domain as a particular instance of a topology.
                              Also, we define an eligible domain as a domain whose nodes meet the requirements of
                              nodeAffinityPolicy and nodeTaintsPolicy.
                              e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                              And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                              It's a required field.
                            type: string
                          whenUnsatisfiable:
                            description: |-
                              WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                              the spread constraint.
                              - DoNotSchedule (default) tells the scheduler not to schedule it.
                              - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                but giving higher precedence to topologies that would help reduce the
                                skew.
                              A constraint is considered "Unsatisfiable" for an incoming pod
                              if and only if every possible node assignment for that pod would violate
                              "MaxSkew" on some topology.
                              For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                              labelSelector spread as 3/1/1:
                              | zone1 | zone2 | zone3 |
                              | P P P |   P   |   P   |
                              If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                              to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                              MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                              won't make it *more* imbalanced.
                              It's a required field.
                            type: string
                      x-kubernetes-list-type: atomic
                    volumes:
                      description: |-
                        List of volumes that can be mounted by containers belonging to the pod.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes
                        See Pod.spec.volumes (API version: v1)
                      x-kubernetes-preserve-unknown-fields: true
                resources:
                  description: |-
                    Resources is a list of bindings specifying which actual instances of
                    PipelineResources to use for the resources the Pipeline has declared
                    it needs.

                    Deprecated: Unused, preserved only for backwards compatibility
                  type: array
                  items:
                    description: |-
                      PipelineResourceBinding connects a reference to an instance of a PipelineResource
                      with a PipelineResource dependency that the Pipeline has declared

                      Deprecated: Unused, preserved only for backwards compatibility
                    type: object
                    properties:
                      name:
                        description: Name is the name of the PipelineResource in the Pipeline's declaration
                        type: string
                      resourceRef:
                        description: |-
                          ResourceRef is a reference to the instance of the actual PipelineResource
                          that should be used
                        type: object
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                      resourceSpec:
                        description: |-
                          ResourceSpec is specification of a resource that should be created and
                          consumed by the task
                        type: object
                        required:
                          - params
                          - type
                        properties:
                          description:
                            description: |-
                              Description is a user-facing description of the resource that may be
                              used to populate a UI.
                            type: string
                          params:
                            type: array
                            items:
                              description: |-
                                ResourceParam declares a string value to use for the parameter called Name, and is used in
                                the specific context of PipelineResources.

                                Deprecated: Unused, preserved only for backwards compatibility
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                            x-kubernetes-list-type: atomic
                          secrets:
                            description: Secrets to fetch to populate some of resource fields
                            type: array
                            items:
                              description: |-
                                SecretParam indicates which secret can be used to populate a field of the resource

                                Deprecated: Unused, preserved only for backwards compatibility
                              type: object
                              required:
                                - fieldName
                                - secretKey
                                - secretName
                              properties:
                                fieldName:
                                  type: string
                                secretKey:
                                  type: string
                                secretName:
                                  type: string
                            x-kubernetes-list-type: atomic
                          type:
                            description: |-
                              PipelineResourceType represents the type of endpoint the pipelineResource is, so that the
                              controller will know this pipelineResource shouldx be fetched and optionally what
                              additional metatdata should be provided for it.

                              Deprecated: Unused, preserved only for backwards compatibility
                            type: string
                  x-kubernetes-list-type: atomic
                serviceAccountName:
                  type: string
                status:
                  description: Used for cancelling a pipelinerun (and maybe more later on)
                  type: string
                taskRunSpecs:
                  description: TaskRunSpecs holds a set of runtime specs
                  type: array
                  items:
                    description: |-
                      PipelineTaskRunSpec  can be used to configure specific
                      specs for a concrete Task
                    type: object
                    properties:
                      computeResources:
                        description: Compute resources to use for this TaskRun
                        type: object
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            type: array
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          limits:
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              anyOf:
                                - type: integer
                                - type: string
                              x-kubernetes-int-or-string: true
                          requests:
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              anyOf:
                                - type: integer
                                - type: string
                              x-kubernetes-int-or-string: true
                      metadata:
                        description: PipelineTaskMetadata contains the labels or annotations for an EmbeddedTask
                        type: object
                        properties:
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                      pipelineTaskName:
                        type: string
                      sidecarOverrides:
                        type: array
                        items:
                          description: TaskRunSidecarOverride is used to override the values of a Sidecar in the corresponding Task.
                          type: object
                          required:
                            - name
                            - resources
                          properties:
                            name:
                              description: The name of the Sidecar to override.
                              type: string
                            resources:
                              description: The resource requirements to apply to the Sidecar.
                              type: object
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  type: array
                                  items:
                                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                      request:
                                        description: |-
                                          Request is the name chosen for a request in the referenced claim.
                                          If empty, everything from the claim is made available, otherwise
                                          only the result of this request.
                                        type: string
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                limits:
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                requests:
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                        x-kubernetes-list-type: atomic
                      stepOverrides:
                        type: array
                        items:
                          description: TaskRunStepOverride is used to override the values of a Step in the corresponding Task.
                          type: object
                          required:
                            - name
                            - resources
                          properties:
                            name:
                              description: The name of the Step to override.
                              type: string
                            resources:
                              description: The resource requirements to apply to the Step.
                              type: object
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  type: array
                                  items:
                                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                      request:
                                        description: |-
                                          Request is the name chosen for a request in the referenced claim.
                                          If empty, everything from the claim is made available, otherwise
                                          only the result of this request.
                                        type: string
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                limits:
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                requests:
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                        x-kubernetes-list-type: atomic
                      taskPodTemplate:
                        description: PodTemplate holds pod specific configuration
                        type: object
                        properties:
                          affinity:
                            description: |-
                              If specified, the pod's scheduling constraints.
                              See Pod.spec.affinity (API version: v1)
                            x-kubernetes-preserve-unknown-fields: true
                          automountServiceAccountToken:
                            description: |-
                              AutomountServiceAccountToken indicates whether pods running as this
                              service account should have an API token automatically mounted.
                            type: boolean
                          dnsConfig:
                            description: |-
                              Specifies the DNS parameters of a pod.
                              Parameters specified here will be merged to the generated DNS
                              configuration based on DNSPolicy.
                            type: object
                            properties:
                              nameservers:
                                description: |-
                                  A list of DNS name server IP addresses.
                                  This will be appended to the base nameservers generated from DNSPolicy.
                                  Duplicated nameservers will be removed.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              options:
                                description: |-
                                  A list of DNS resolver options.
                                  This will be merged with the base options generated from DNSPolicy.
                                  Duplicated entries will be removed. Resolution options given in Options
                                  will override those that appear in the base DNSPolicy.
                                type: array
                                items:
                                  description: PodDNSConfigOption defines DNS resolver options of a pod.
                                  type: object
                                  properties:
                                    name:
                                      description: Required.
                                      type: string
                                    value:
                                      type: string
                                x-kubernetes-list-type: atomic
                              searches:
                                description: |-
                                  A list of DNS search domains for host-name lookup.
                                  This will be appended to the base search paths generated from DNSPolicy.
                                  Duplicated search paths will be removed.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                          dnsPolicy:
                            description: |-
                              Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                              'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                              will be merged with the policy selected with DNSPolicy.
                            type: string
                          enableServiceLinks:
                            description: |-
                              EnableServiceLinks indicates whether information about services should be injected into pod's
                              environment variables, matching the syntax of Docker links.
                              Optional: Defaults to true.
                            type: boolean
                          env:
                            description: List of environment variables that can be provided to the containers belonging to the pod.
                            type: array
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                          default: ""
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                          default: ""
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                            x-kubernetes-list-type: atomic
                          hostAliases:
                            description: |-
                              HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                              file if specified. This is only valid for non-hostNetwork pods.
                            type: array
                            items:
                              description: |-
                                HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                pod's hosts file.
                              type: object
                              required:
                                - ip
                              properties:
                                hostnames:
                                  description: Hostnames for the above IP address.
                                  type: array
                                  items:
                                    type: string
                                  x-kubernetes-list-type: atomic
                                ip:
                                  description: IP address of the host file entry.
                                  type: string
                            x-kubernetes-list-type: atomic
                          hostNetwork:
                            description: HostNetwork specifies whether the pod may use the node network namespace
                            type: boolean
                          imagePullSecrets:
                            description: ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified
                            type: array
                            items:
                              description: |-
                                LocalObjectReference contains enough information to let you locate the
                                referenced object inside the same namespace.
                              type: object
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                  default: ""
                              x-kubernetes-map-type: atomic
                            x-kubernetes-list-type: atomic
                          nodeSelector:
                            description: |-
                              NodeSelector is a selector which must be true for the pod to fit on a node.
                              Selector which must match a node's labels for the pod to be scheduled on that node.
                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            type: object
                            additionalProperties:
                              type: string
                          priorityClassName:
                            description: |-
                              If specified, indicates the pod's priority. "system-node-critical" and
                              "system-cluster-critical" are two special keywords which indicate the
                              highest priorities with the former being the highest priority. Any other
                              name must be defined by creating a PriorityClass object with that name.
                              If not specified, the pod priority will be default or zero if there is no
                              default.
                            type: string
                          runtimeClassName:
                            description: |-
                              RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                              group, which should be used to run this pod. If no RuntimeClass resource
                              matches the named class, the pod will not be run. If unset or empty, the
                              "legacy" RuntimeClass will be used, which is an implicit class with an
                              empty definition that uses the default runtime handler.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                              This is a beta feature as of Kubernetes v1.14.
                            type: string
                          schedulerName:
                            description: SchedulerName specifies the scheduler to be used to dispatch the Pod
                            type: string
                          securityContext:
                            description: |-
                              SecurityContext holds pod-level security attributes and common container settings.
                              Optional: Defaults to empty.  See type description for default values of each field.
                            type: object
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: Level is SELinux level label that applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that applies to the container.
                                    type: string
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: array
                                items:
                                  type: integer
                                  format: int64
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: array
                                items:
                                  description: Sysctl defines a kernel parameter to be set
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                          tolerations:
                            description: If specified, the pod's tolerations.
                            type: array
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              type: object
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  type: integer
                                  format: int64
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                            x-kubernetes-list-type: atomic
                          topologySpreadConstraints:
                            description: |-
                              TopologySpreadConstraints controls how Pods are spread across your cluster among
                              failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                            type: array
                            items:
                              description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                              type: object
                              required:
                                - maxSkew
                                - topologyKey
                                - whenUnsatisfiable
                              properties:
                                labelSelector:
                                  description: |-
                                    LabelSelector is used to find matching pods.
                                    Pods that match this label selector are counted to determine the number of pods
                                    in their corresponding topology domain.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      type: array
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        type: object
                                        required:
                                          - key
                                          - operator
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                            x-kubernetes-list-type: atomic
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select the pods over which
                                    spreading will be calculated. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are ANDed with labelSelector
                                    to select the group of existing pods over which spreading will be calculated
                                    for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    Keys that don't exist in the incoming pod labels will
                                    be ignored. A null or empty list means only match against labelSelector.

                                    This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                  type: array
                                  items:
                                    type: string
                                  x-kubernetes-list-type: atomic
                                maxSkew:
                                  description: |-
                                    MaxSkew describes the degree to which pods may be unevenly distributed.
                                    When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                    between the number of matching pods in the target topology and the global minimum.
                                    The global minimum is the minimum number of matching pods in an eligible domain
                                    or zero if the number of eligible domains is less than MinDomains.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 2/2/1:
                                    In this case, the global minimum is 1.
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |   P   |
                                    - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                    scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1).
                                    - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                    When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                    to topologies that satisfy it.
                                    It's a required field. Default value is 1 and 0 is not allowed.
                                  type: integer
                                  format: int32
                                minDomains:
                                  description: |-
                                    MinDomains indicates a minimum number of eligible domains.
                                    When the number of eligible domains with matching topology keys is less than minDomains,
                                    Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                    And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                    this value has no effect on scheduling.
                                    As a result, when the number of eligible domains is less than minDomains,
                                    scheduler won't schedule more than maxSkew Pods to those domains.
                                    If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                    Valid values are integers greater than 0.
                                    When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                    For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2:
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |  P P  |
                                    The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                    In this situation, new pod with the same labelSelector cannot be scheduled,
                                    because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                    it will violate MaxSkew.
                                  type: integer
                                  format: int32
                                nodeAffinityPolicy:
                                  description: |-
                                    NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                    when calculating pod topology spread skew. Options are:
                                    - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                    - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                    If this value is nil, the behavior is equivalent to the Honor policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                nodeTaintsPolicy:
                                  description: |-
                                    NodeTaintsPolicy indicates how we will treat node taints when calculating
                                    pod topology spread skew. Options are:
                                    - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                    has a toleration, are included.
                                    - Ignore: node taints are ignored. All nodes are included.

                                    If this value is nil, the behavior is equivalent to the Ignore policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                topologyKey:
                                  description: |-
                                    TopologyKey is the key of node labels. Nodes that have a label with this key
                                    and identical values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and try to put balanced number
                                    of pods into each bucket.
                                    We define a domain as a particular instance of a topology.
                                    Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                    nodeAffinityPolicy and nodeTaintsPolicy.
                                    e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                    And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                    It's a required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: |-
                                    WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                    the spread constraint.
                                    - DoNotSchedule (default) tells the scheduler not to schedule it.
                                    - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                      but giving higher precedence to topologies that would help reduce the
                                      skew.
                                    A constraint is considered "Unsatisfiable" for an incoming pod
                                    if and only if every possible node assignment for that pod would violate
                                    "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 3/1/1:
                                    | zone1 | zone2 | zone3 |
                                    | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                    to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                    MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                    won't make it *more* imbalanced.
                                    It's a required field.
                                  type: string
                            x-kubernetes-list-type: atomic
                          volumes:
                            description: |-
                              List of volumes that can be mounted by containers belonging to the pod.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes
                              See Pod.spec.volumes (API version: v1)
                            x-kubernetes-preserve-unknown-fields: true
                      taskServiceAccountName:
                        type: string
                  x-kubernetes-list-type: atomic
                timeout:
                  description: |-
                    Timeout is the Time after which the Pipeline times out.
                    Defaults to never.
                    Refer to Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration

                    Deprecated: use pipelineRunSpec.Timeouts.Pipeline instead
                  type: string
                timeouts:
                  description: |-
                    Time after which the Pipeline times out.
                    Currently three keys are accepted in the map
                    pipeline, tasks and finally
                    with Timeouts.pipeline >= Timeouts.tasks + Timeouts.finally
                  type: object
                  properties:
                    finally:
                      description: Finally sets the maximum allowed duration of this pipeline's finally
                      type: string
                    pipeline:
                      description: Pipeline sets the maximum allowed duration for execution of the entire pipeline. The sum of individual timeouts for tasks and finally must not exceed this value.
                      type: string
                    tasks:
                      description: Tasks sets the maximum allowed duration of this pipeline's tasks
                      type: string
                workspaces:
                  description: |-
                    Workspaces holds a set of workspace bindings that must match names
                    with those declared in the pipeline.
                  type: array
                  items:
                    description: WorkspaceBinding maps a Task's declared workspace to a Volume.
                    type: object
                    required:
                      - name
                    properties:
                      configMap:
                        description: ConfigMap represents a configMap that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items if unspecified, each key-value pair in the Data field of the referenced
                              ConfigMap will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the ConfigMap,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                            default: ""
                          optional:
                            description: optional specify whether the ConfigMap or its keys must be defined
                            type: boolean
                        x-kubernetes-map-type: atomic
                      csi:
                        description: CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
                        type: object
                        required:
                          - driver
                        properties:
                          driver:
                            description: |-
                              driver is the name of the CSI driver that handles this volume.
                              Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: |-
                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated CSI driver
                              which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: |-
                              nodePublishSecretRef is a reference to the secret object containing
                              sensitive information to pass to the CSI driver to complete the CSI
                              NodePublishVolume and NodeUnpublishVolume calls.
                              This field is optional, and  may be empty if no secret is required. If the
                              secret object contains more than one secret, all secret references are passed.
                            type: object
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                                default: ""
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: |-
                              readOnly specifies a read-only configuration for the volume.
                              Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            description: |-
                              volumeAttributes stores driver-specific properties that are passed to the CSI
                              driver. Consult your driver's documentation for supported values.
                            type: object
                            additionalProperties:
                              type: string
                      emptyDir:
                        description: |-
                          EmptyDir represents a temporary directory that shares a Task's lifetime.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Either this OR PersistentVolumeClaim can be used.
                        type: object
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                      name:
                        description: Name is the name of the workspace populated by the volume.
                        type: string
                      persistentVolumeClaim:
                        description: |-
                          PersistentVolumeClaimVolumeSource represents a reference to a
                          PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.
                        type: object
                        required:
                          - claimName
                        properties:
                          claimName:
                            description: |-
                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: string
                          readOnly:
                            description: |-
                              readOnly Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                      projected:
                        description: Projected represents a projected volume that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode are the mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          sources:
                            description: |-
                              sources is the list of volume projections. Each entry in this list
                              handles one source.
                            type: array
                            items:
                              description: |-
                                Projection that may be projected along with other supported volume types.
                                Exactly one of these fields must be set.
                              type: object
                              properties:
                                clusterTrustBundle:
                                  description: |-
                                    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                    of ClusterTrustBundle objects in an auto-updating file.

                                    Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                    ClusterTrustBundle objects can either be selected by name, or by the
                                    combination of signer name and a label selector.

                                    Kubelet performs aggressive normalization of the PEM contents written
                                    into the pod filesystem.  Esoteric PEM features such as inter-block
                                    comments and block headers are stripped.  Certificates are deduplicated.
                                    The ordering of certificates within the file is arbitrary, and Kubelet
                                    may change the order over time.
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    labelSelector:
                                      description: |-
                                        Select all ClusterTrustBundles that match this label selector.  Only has
                                        effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                        interpreted as "match nothing".  If set but empty, interpreted as "match
                                        everything".
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          type: array
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            type: object
                                            required:
                                              - key
                                              - operator
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                type: array
                                                items:
                                                  type: string
                                                x-kubernetes-list-type: atomic
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: |-
                                        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                        with signerName and labelSelector.
                                      type: string
                                    optional:
                                      description: |-
                                        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                        aren't available.  If using name, then the named ClusterTrustBundle is
                                        allowed not to exist.  If using signerName, then the combination of
                                        signerName and labelSelector is allowed to match zero
                                        ClusterTrustBundles.
                                      type: boolean
                                    path:
                                      description: Relative path from the volume root to write the bundle.
                                      type: string
                                    signerName:
                                      description: |-
                                        Select all ClusterTrustBundles that match this signer name.
                                        Mutually-exclusive with name.  The contents of all selected
                                        ClusterTrustBundles will be unified and deduplicated.
                                      type: string
                                configMap:
                                  description: configMap information about the configMap data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional specify whether the ConfigMap or its keys must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI data to project
                                  type: object
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume file
                                      type: array
                                      items:
                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                        type: object
                                        required:
                                          - path
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                            type: object
                                            required:
                                              - fieldPath
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            type: object
                                            required:
                                              - resource
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            x-kubernetes-map-type: atomic
                                      x-kubernetes-list-type: atomic
                                secret:
                                  description: secret information about the secret data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional field specify whether the Secret or its key must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    audience:
                                      description: |-
                                        audience is the intended audience of the token. A recipient of a token
                                        must identify itself with an identifier specified in the audience of the
                                        token, and otherwise should reject the token. The audience defaults to the
                                        identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: |-
                                        expirationSeconds is the requested duration of validity of the service
                                        account token. As the token approaches expiration, the kubelet volume
                                        plugin will proactively rotate the service account token. The kubelet will
                                        start trying to rotate the token if the token is older than 80 percent of
                                        its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                        and must be at least 10 minutes.
                                      type: integer
                                      format: int64
                                    path:
                                      description: |-
                                        path is the path relative to the mount point of the file to project the
                                        token into.
                                      type: string
                            x-kubernetes-list-type: atomic
                      secret:
                        description: Secret represents a secret that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is Optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values
                              for mode bits. Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items If unspecified, each key-value pair in the Data field of the referenced
                              Secret will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the Secret,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          optional:
                            description: optional field specify whether the Secret or its keys must be defined
                            type: boolean
                          secretName:
                            description: |-
                              secretName is the name of the secret in the pod's namespace to use.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: string
                      subPath:
                        description: |-
                          SubPath is optionally a directory on the volume which should be used
                          for this binding (i.e. the volume will be mounted at this sub directory).
                        type: string
                      volumeClaimTemplate:
                        description: |-
                          VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
                          The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
                          See PersistentVolumeClaim (API version: v1)
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
            status:
              description: PipelineRunStatus defines the observed state of PipelineRun
              type: object
              properties:
                annotations:
                  description: |-
                    Annotations is additional Status fields for the Resource to save some
                    additional State as well as convey more information to the user. This is
                    roughly akin to Annotations on any k8s resource, just the reconciler conveying
                    richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                childReferences:
                  description: list of TaskRun and Run names, PipelineTask names, and API versions/kinds for children of this PipelineRun.
                  type: array
                  items:
                    description: ChildStatusReference is used to point to the statuses of individual TaskRuns and Runs within this PipelineRun.
                    type: object
                    properties:
                      apiVersion:
                        type: string
                      displayName:
                        description: |-
                          DisplayName is a user-facing name of the pipelineTask that may be
                          used to populate a UI.
                        type: string
                      kind:
                        type: string
                      name:
                        description: Name is the name of the TaskRun or Run this is referencing.
                        type: string
                      pipelineTaskName:
                        description: PipelineTaskName is the name of the PipelineTask this is referencing.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                completionTime:
                  description: CompletionTime is the time the PipelineRun completed.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: |-
                      Condition defines a readiness condition for a Knative resource.
                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: |-
                          Severity with which to treat failures of this type of condition.
                          When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                finallyStartTime:
                  description: FinallyStartTime is when all non-finally tasks have been completed and only finally tasks are being executed.
                  type: string
                  format: date-time
                observedGeneration:
                  description: |-
                    ObservedGeneration is the 'Generation' of the Service that
                    was last processed by the controller.
                  type: integer
                  format: int64
                pipelineResults:
                  description: PipelineResults are the list of results written out by the pipeline task's containers
                  type: array
                  items:
                    description: PipelineRunResult used to describe the results of a pipeline
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        description: Name is the result's name as declared by the Pipeline
                        type: string
                      value:
                        description: Value is the result returned from the execution of this PipelineRun
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                pipelineSpec:
                  description: |-
                    PipelineSpec contains the exact spec used to instantiate the run.
                    See Pipeline.spec (API version: tekton.dev/v1beta1)
                  x-kubernetes-preserve-unknown-fields: true
                provenance:
                  description: Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).
                  type: object
                  properties:
                    configSource:
                      description: 'Deprecated: Use RefSource instead'
                      type: object
                      properties:
                        digest:
                          description: |-
                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                          type: object
                          additionalProperties:
                            type: string
                        entryPoint:
                          description: |-
                            EntryPoint identifies the entry point into the build. This is often a path to a
                            build definition file and/or a target label within that file.
                            Example: "task/git-clone/0.8/git-clone.yaml"
                          type: string
                        uri:
                          description: |-
                            URI indicates the identity of the source of the build definition.
                            Example: "https://github.com/tektoncd/catalog"
                          type: string
                    featureFlags:
                      description: FeatureFlags identifies the feature flags that were used during the task/pipeline run
                      type: object
                      properties:
                        awaitSidecarReadiness:
                          type: boolean
                        coschedule:
                          type: string
                        disableAffinityAssistant:
                          type: boolean
                        disableCredsInit:
                          type: boolean
                        disableInlineSpec:
                          type: string
                        enableAPIFields:
                          type: string
                        enableArtifacts:
                          type: boolean
                        enableCELInWhenExpression:
                          type: boolean
                        enableConciseResolverSyntax:
                          type: boolean
                        enableKeepPodOnCancel:
                          type: boolean
                        enableKubernetesSidecar:
                          type: boolean
                        enableParamEnum:
                          type: boolean
                        enableProvenanceInStatus:
                          type: boolean
                        enableStepActions:
                          type: boolean
                        enforceNonfalsifiability:
                          type: string
                        maxResultSize:
                          type: integer
                        requireGitSSHSecretKnownHosts:
                          type: boolean
                        resultExtractionMethod:
                          type: string
                        runningInEnvWithInjectedSidecars:
                          type: boolean
                        sendCloudEventsForRuns:
                          type: boolean
                        setSecurityContext:
                          type: boolean
                        setSecurityContextReadOnlyRootFilesystem:
                          type: boolean
                        verificationNoMatchPolicy:
                          description: |-
                            VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                            VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                            ignore: skip trusted resources verification when no matching verification policies found
                            warn: skip trusted resources verification when no matching verification policies found and log a warning
                            fail: fail the taskrun or pipelines run if no matching verification policies found
                          type: string
                    refSource:
                      description: RefSource identifies the source where a remote task/pipeline came from.
                      type: object
                      properties:
                        digest:
                          description: |-
                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                          type: object
                          additionalProperties:
                            type: string
                        entryPoint:
                          description: |-
                            EntryPoint identifies the entry point into the build. This is often a path to a
                            build definition file and/or a target label within that file.
                            Example: "task/git-clone/0.8/git-clone.yaml"
                          type: string
                        uri:
                          description: |-
                            URI indicates the identity of the source of the build definition.
                            Example: "https://github.com/tektoncd/catalog"
                          type: string
                runs:
                  description: |-
                    Runs is a map of PipelineRunRunStatus with the run name as the key

                    Deprecated: use ChildReferences instead. As of v0.45.0, this field is no
                    longer populated and is only included for backwards compatibility with
                    older server versions.
                  type: object
                  additionalProperties:
                    description: PipelineRunRunStatus contains the name of the PipelineTask for this CustomRun or Run and the CustomRun or Run's Status
                    type: object
                    properties:
                      pipelineTaskName:
                        description: PipelineTaskName is the name of the PipelineTask.
                        type: string
                      status:
                        description: Status is the CustomRunStatus for the corresponding CustomRun or Run
                        type: object
                        properties:
                          annotations:
                            description: |-
                              Annotations is additional Status fields for the Resource to save some
                              additional State as well as convey more information to the user. This is
                              roughly akin to Annotations on any k8s resource, just the reconciler conveying
                              richer information outwards.
                            type: object
                            additionalProperties:
                              type: string
                          completionTime:
                            description: CompletionTime is the time the build completed.
                            type: string
                            format: date-time
                          conditions:
                            description: Conditions the latest available observations of a resource's current state.
                            type: array
                            items:
                              description: |-
                                Condition defines a readiness condition for a Knative resource.
                                See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                              type: object
                              required:
                                - status
                                - type
                              properties:
                                lastTransitionTime:
                                  description: |-
                                    LastTransitionTime is the last time the condition transitioned from one status to another.
                                    We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                                    differences (all other things held constant).
                                  type: string
                                message:
                                  description: A human readable message indicating details about the transition.
                                  type: string
                                reason:
                                  description: The reason for the condition's last transition.
                                  type: string
                                severity:
                                  description: |-
                                    Severity with which to treat failures of this type of condition.
                                    When this is not specified, it defaults to Error.
                                  type: string
                                status:
                                  description: Status of the condition, one of True, False, Unknown.
                                  type: string
                                type:
                                  description: Type of condition.
                                  type: string
                          extraFields:
                            description: |-
                              ExtraFields holds arbitrary fields provided by the custom task
                              controller.
                            x-kubernetes-preserve-unknown-fields: true
                          observedGeneration:
                            description: |-
                              ObservedGeneration is the 'Generation' of the Service that
                              was last processed by the controller.
                            type: integer
                            format: int64
                          results:
                            description: |-
                              Results reports any output result values to be consumed by later
                              tasks in a pipeline.
                            type: array
                            items:
                              description: CustomRunResult used to describe the results of a task
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: Name the given name
                                  type: string
                                value:
                                  description: Value the given value of the result
                                  type: string
                          retriesStatus:
                            description: |-
                              RetriesStatus contains the history of CustomRunStatus, in case of a retry.
                              See CustomRun.status (API version: tekton.dev/v1beta1)
                            x-kubernetes-preserve-unknown-fields: true
                          startTime:
                            description: StartTime is the time the build is actually started.
                            type: string
                            format: date-time
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                skippedTasks:
                  description: list of tasks that were skipped due to when expressions evaluating to false
                  type: array
                  items:
                    description: |-
                      SkippedTask is used to describe the Tasks that were skipped due to their When Expressions
                      evaluating to False. This is a struct because we are looking into including more details
                      about the When Expressions that caused this Task to be skipped.
                    type: object
                    required:
                      - name
                      - reason
                    properties:
                      name:
                        description: Name is the Pipeline Task name
                        type: string
                      reason:
                        description: Reason is the cause of the PipelineTask being skipped.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                spanContext:
                  description: SpanContext contains tracing span context fields
                  type: object
                  additionalProperties:
                    type: string
                startTime:
                  description: StartTime is the time the PipelineRun is actually started.
                  type: string
                  format: date-time
                taskRuns:
                  description: |-
                    TaskRuns is a map of PipelineRunTaskRunStatus with the taskRun name as the key.

                    Deprecated: use ChildReferences instead. As of v0.45.0, this field is no
                    longer populated and is only included for backwards compatibility with
                    older server versions.
                  type: object
                  additionalProperties:
                    description: PipelineRunTaskRunStatus contains the name of the PipelineTask for this TaskRun and the TaskRun's Status
                    type: object
                    properties:
                      pipelineTaskName:
                        description: PipelineTaskName is the name of the PipelineTask.
                        type: string
                      status:
                        description: Status is the TaskRunStatus for the corresponding TaskRun
                        type: object
                        required:
                          - podName
                        properties:
                          annotations:
                            description: |-
                              Annotations is additional Status fields for the Resource to save some
                              additional State as well as convey more information to the user. This is
                              roughly akin to Annotations on any k8s resource, just the reconciler conveying
                              richer information outwards.
                            type: object
                            additionalProperties:
                              type: string
                          cloudEvents:
                            description: |-
                              CloudEvents describe the state of each cloud event requested via a
                              CloudEventResource.

                              Deprecated: Removed in v0.44.0.
                            type: array
                            items:
                              description: |-
                                CloudEventDelivery is the target of a cloud event along with the state of
                                delivery.
                              type: object
                              properties:
                                status:
                                  description: CloudEventDeliveryState reports the state of a cloud event to be sent.
                                  type: object
                                  required:
                                    - message
                                    - retryCount
                                  properties:
                                    condition:
                                      description: Current status
                                      type: string
                                    message:
                                      description: Error is the text of error (if any)
                                      type: string
                                    retryCount:
                                      description: RetryCount is the number of attempts of sending the cloud event
                                      type: integer
                                      format: int32
                                    sentAt:
                                      description: SentAt is the time at which the last attempt to send the event was made
                                      type: string
                                      format: date-time
                                target:
                                  description: Target points to an addressable
                                  type: string
                            x-kubernetes-list-type: atomic
                          completionTime:
                            description: CompletionTime is the time the build completed.
                            type: string
                            format: date-time
                          conditions:
                            description: Conditions the latest available observations of a resource's current state.
                            type: array
                            items:
                              description: |-
                                Condition defines a readiness condition for a Knative resource.
                                See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                              type: object
                              required:
                                - status
                                - type
                              properties:
                                lastTransitionTime:
                                  description: |-
                                    LastTransitionTime is the last time the condition transitioned from one status to another.
                                    We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                                    differences (all other things held constant).
                                  type: string
                                message:
                                  description: A human readable message indicating details about the transition.
                                  type: string
                                reason:
                                  description: The reason for the condition's last transition.
                                  type: string
                                severity:
                                  description: |-
                                    Severity with which to treat failures of this type of condition.
                                    When this is not specified, it defaults to Error.
                                  type: string
                                status:
                                  description: Status of the condition, one of True, False, Unknown.
                                  type: string
                                type:
                                  description: Type of condition.
                                  type: string
                          observedGeneration:
                            description: |-
                              ObservedGeneration is the 'Generation' of the Service that
                              was last processed by the controller.
                            type: integer
                            format: int64
                          podName:
                            description: PodName is the name of the pod responsible for executing this task's steps.
                            type: string
                          provenance:
                            description: Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).
                            type: object
                            properties:
                              configSource:
                                description: 'Deprecated: Use RefSource instead'
                                type: object
                                properties:
                                  digest:
                                    description: |-
                                      Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                      Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                                    type: object
                                    additionalProperties:
                                      type: string
                                  entryPoint:
                                    description: |-
                                      EntryPoint identifies the entry point into the build. This is often a path to a
                                      build definition file and/or a target label within that file.
                                      Example: "task/git-clone/0.8/git-clone.yaml"
                                    type: string
                                  uri:
                                    description: |-
                                      URI indicates the identity of the source of the build definition.
                                      Example: "https://github.com/tektoncd/catalog"
                                    type: string
                              featureFlags:
                                description: FeatureFlags identifies the feature flags that were used during the task/pipeline run
                                type: object
                                properties:
                                  awaitSidecarReadiness:
                                    type: boolean
                                  coschedule:
                                    type: string
                                  disableAffinityAssistant:
                                    type: boolean
                                  disableCredsInit:
                                    type: boolean
                                  disableInlineSpec:
                                    type: string
                                  enableAPIFields:
                                    type: string
                                  enableArtifacts:
                                    type: boolean
                                  enableCELInWhenExpression:
                                    type: boolean
                                  enableConciseResolverSyntax:
                                    type: boolean
                                  enableKeepPodOnCancel:
                                    type: boolean
                                  enableKubernetesSidecar:
                                    type: boolean
                                  enableParamEnum:
                                    type: boolean
                                  enableProvenanceInStatus:
                                    type: boolean
                                  enableStepActions:
                                    type: boolean
                                  enforceNonfalsifiability:
                                    type: string
                                  maxResultSize:
                                    type: integer
                                  requireGitSSHSecretKnownHosts:
                                    type: boolean
                                  resultExtractionMethod:
                                    type: string
                                  runningInEnvWithInjectedSidecars:
                                    type: boolean
                                  sendCloudEventsForRuns:
                                    type: boolean
                                  setSecurityContext:
                                    type: boolean
                                  setSecurityContextReadOnlyRootFilesystem:
                                    type: boolean
                                  verificationNoMatchPolicy:
                                    description: |-
                                      VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                                      VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                                      ignore: skip trusted resources verification when no matching verification policies found
                                      warn: skip trusted resources verification when no matching verification policies found and log a warning
                                      fail: fail the taskrun or pipelines run if no matching verification policies found
                                    type: string
                              refSource:
                                description: RefSource identifies the source where a remote task/pipeline came from.
                                type: object
                                properties:
                                  digest:
                                    description: |-
                                      Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                      Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                                    type: object
                                    additionalProperties:
                                      type: string
                                  entryPoint:
                                    description: |-
                                      EntryPoint identifies the entry point into the build. This is often a path to a
                                      build definition file and/or a target label within that file.
                                      Example: "task/git-clone/0.8/git-clone.yaml"
                                    type: string
                                  uri:
                                    description: |-
                                      URI indicates the identity of the source of the build definition.
                                      Example: "https://github.com/tektoncd/catalog"
                                    type: string
                          resourcesResult:
                            description: |-
                              Results from Resources built during the TaskRun.
                              This is tomb-stoned along with the removal of pipelineResources
                              Deprecated: this field is not populated and is preserved only for backwards compatibility
                            type: array
                            items:
                              description: |-
                                RunResult is used to write key/value pairs to TaskRun pod termination messages.
                                The key/value pairs may come from the entrypoint binary, or represent a TaskRunResult.
                                If they represent a TaskRunResult, the key is the name of the result and the value is the
                                JSON-serialized value of the result.
                              type: object
                              required:
                                - key
                                - value
                              properties:
                                key:
                                  type: string
                                resourceName:
                                  description: |-
                                    ResourceName may be used in tests, but it is not populated in termination messages.
                                    It is preserved here for backwards compatibility and will not be ported to v1.
                                  type: string
                                type:
                                  description: |-
                                    ResultType used to find out whether a RunResult is from a task result or not
                                    Note that ResultsType is another type which is used to define the data type
                                    (e.g. string, array, etc) we used for Results
                                  type: integer
                                value:
                                  type: string
                            x-kubernetes-list-type: atomic
                          retriesStatus:
                            description: |-
                              RetriesStatus contains the history of TaskRunStatus in case of a retry in order to keep record of failures.
                              All TaskRunStatus stored in RetriesStatus will have no date within the RetriesStatus as is redundant.
                              See TaskRun.status (API version: tekton.dev/v1beta1)
                            x-kubernetes-preserve-unknown-fields: true
                          sidecars:
                            description: |-
                              The list has one entry per sidecar in the manifest. Each entry is
                              represents the imageid of the corresponding sidecar.
                            type: array
                            items:
                              description: SidecarState reports the results of running a sidecar in a Task.
                              type: object
                              properties:
                                container:
                                  type: string
                                imageID:
                                  type: string
                                name:
                                  type: string
                                running:
                                  description: Details about a running container
                                  type: object
                                  properties:
                                    startedAt:
                                      description: Time at which the container was last (re-)started
                                      type: string
                                      format: date-time
                                terminated:
                                  description: Details about a terminated container
                                  type: object
                                  required:
                                    - exitCode
                                  properties:
                                    containerID:
                                      description: Container's ID in the format '<type>://<container_id>'
                                      type: string
                                    exitCode:
                                      description: Exit status from the last termination of the container
                                      type: integer
                                      format: int32
                                    finishedAt:
                                      description: Time at which the container last terminated
                                      type: string
                                      format: date-time
                                    message:
                                      description: Message regarding the last termination of the container
                                      type: string
                                    reason:
                                      description: (brief) reason from the last termination of the container
                                      type: string
                                    signal:
                                      description: Signal from the last termination of the container
                                      type: integer
                                      format: int32
                                    startedAt:
                                      description: Time at which previous execution of the container started
                                      type: string
                                      format: date-time
                                waiting:
                                  description: Details about a waiting container
                                  type: object
                                  properties:
                                    message:
                                      description: Message regarding why the container is not yet running.
                                      type: string
                                    reason:
                                      description: (brief) reason the container is not yet running.
                                      type: string
                            x-kubernetes-list-type: atomic
                          spanContext:
                            description: SpanContext contains tracing span context fields
                            type: object
                            additionalProperties:
                              type: string
                          startTime:
                            description: StartTime is the time the build is actually started.
                            type: string
                            format: date-time
                          steps:
                            description: Steps describes the state of each build step container.
                            type: array
                            items:
                              description: StepState reports the results of running a step in a Task.
                              type: object
                              properties:
                                container:
                                  type: string
                                imageID:
                                  type: string
                                inputs:
                                  type: array
                                  items:
                                    description: |-
                                      Artifact represents an artifact within a system, potentially containing multiple values
                                      associated with it.
                                    type: object
                                    properties:
                                      buildOutput:
                                        description: Indicate if the artifact is a build output or a by-product
                                        type: boolean
                                      name:
                                        description: The artifact's identifying category name
                                        type: string
                                      values:
                                        description: A collection of values related to the artifact
                                        type: array
                                        items:
                                          description: ArtifactValue represents a specific value or data element within an Artifact.
                                          type: object
                                          properties:
                                            digest:
                                              type: object
                                              additionalProperties:
                                                type: string
                                            uri:
                                              type: string
                                name:
                                  type: string
                                outputs:
                                  type: array
                                  items:
                                    description: |-
                                      Artifact represents an artifact within a system, potentially containing multiple values
                                      associated with it.
                                    type: object
                                    properties:
                                      buildOutput:
                                        description: Indicate if the artifact is a build output or a by-product
                                        type: boolean
                                      name:
                                        description: The artifact's identifying category name
                                        type: string
                                      values:
                                        description: A collection of values related to the artifact
                                        type: array
                                        items:
                                          description: ArtifactValue represents a specific value or data element within an Artifact.
                                          type: object
                                          properties:
                                            digest:
                                              type: object
                                              additionalProperties:
                                                type: string
                                            uri:
                                              type: string
                                provenance:
                                  description: |-
                                    Provenance contains metadata about resources used in the TaskRun/PipelineRun
                                    such as the source from where a remote build definition was fetched.
                                    This field aims to carry minimum amoumt of metadata in *Run status so that
                                    Tekton Chains can capture them in the provenance.
                                  type: object
                                  properties:
                                    configSource:
                                      description: 'Deprecated: Use RefSource instead'
                                      type: object
                                      properties:
                                        digest:
                                          description: |-
                                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                                          type: object
                                          additionalProperties:
                                            type: string
                                        entryPoint:
                                          description: |-
                                            EntryPoint identifies the entry point into the build. This is often a path to a
                                            build definition file and/or a target label within that file.
                                            Example: "task/git-clone/0.8/git-clone.yaml"
                                          type: string
                                        uri:
                                          description: |-
                                            URI indicates the identity of the source of the build definition.
                                            Example: "https://github.com/tektoncd/catalog"
                                          type: string
                                    featureFlags:
                                      description: FeatureFlags identifies the feature flags that were used during the task/pipeline run
                                      type: object
                                      properties:
                                        awaitSidecarReadiness:
                                          type: boolean
                                        coschedule:
                                          type: string
                                        disableAffinityAssistant:
                                          type: boolean
                                        disableCredsInit:
                                          type: boolean
                                        disableInlineSpec:
                                          type: string
                                        enableAPIFields:
                                          type: string
                                        enableArtifacts:
                                          type: boolean
                                        enableCELInWhenExpression:
                                          type: boolean
                                        enableConciseResolverSyntax:
                                          type: boolean
                                        enableKeepPodOnCancel:
                                          type: boolean
                                        enableKubernetesSidecar:
                                          type: boolean
                                        enableParamEnum:
                                          type: boolean
                                        enableProvenanceInStatus:
                                          type: boolean
                                        enableStepActions:
                                          type: boolean
                                        enforceNonfalsifiability:
                                          type: string
                                        maxResultSize:
                                          type: integer
                                        requireGitSSHSecretKnownHosts:
                                          type: boolean
                                        resultExtractionMethod:
                                          type: string
                                        runningInEnvWithInjectedSidecars:
                                          type: boolean
                                        sendCloudEventsForRuns:
                                          type: boolean
                                        setSecurityContext:
                                          type: boolean
                                        setSecurityContextReadOnlyRootFilesystem:
                                          type: boolean
                                        verificationNoMatchPolicy:
                                          description: |-
                                            VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                                            VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                                            ignore: skip trusted resources verification when no matching verification policies found
                                            warn: skip trusted resources verification when no matching verification policies found and log a warning
                                            fail: fail the taskrun or pipelines run if no matching verification policies found
                                          type: string
                                    refSource:
                                      description: RefSource identifies the source where a remote task/pipeline came from.
                                      type: object
                                      properties:
                                        digest:
                                          description: |-
                                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                                          type: object
                                          additionalProperties:
                                            type: string
                                        entryPoint:
                                          description: |-
                                            EntryPoint identifies the entry point into the build. This is often a path to a
                                            build definition file and/or a target label within that file.
                                            Example: "task/git-clone/0.8/git-clone.yaml"
                                          type: string
                                        uri:
                                          description: |-
                                            URI indicates the identity of the source of the build definition.
                                            Example: "https://github.com/tektoncd/catalog"
                                          type: string
                                results:
                                  type: array
                                  items:
                                    description: TaskRunResult used to describe the results of a task
                                    type: object
                                    required:
                                      - name
                                      - value
                                    properties:
                                      name:
                                        description: Name the given name
                                        type: string
                                      type:
                                        description: |-
                                          Type is the user-specified type of the result. The possible type
                                          is currently "string" and will support "array" in following work.
                                        type: string
                                      value:
                                        description: Value the given value of the result
                                        x-kubernetes-preserve-unknown-fields: true
                                running:
                                  description: Details about a running container
                                  type: object
                                  properties:
                                    startedAt:
                                      description: Time at which the container was last (re-)started
                                      type: string
                                      format: date-time
                                terminated:
                                  description: Details about a terminated container
                                  type: object
                                  required:
                                    - exitCode
                                  properties:
                                    containerID:
                                      description: Container's ID in the format '<type>://<container_id>'
                                      type: string
                                    exitCode:
                                      description: Exit status from the last termination of the container
                                      type: integer
                                      format: int32
                                    finishedAt:
                                      description: Time at which the container last terminated
                                      type: string
                                      format: date-time
                                    message:
                                      description: Message regarding the last termination of the container
                                      type: string
                                    reason:
                                      description: (brief) reason from the last termination of the container
                                      type: string
                                    signal:
                                      description: Signal from the last termination of the container
                                      type: integer
                                      format: int32
                                    startedAt:
                                      description: Time at which previous execution of the container started
                                      type: string
                                      format: date-time
                                waiting:
                                  description: Details about a waiting container
                                  type: object
                                  properties:
                                    message:
                                      description: Message regarding why the container is not yet running.
                                      type: string
                                    reason:
                                      description: (brief) reason the container is not yet running.
                                      type: string
                            x-kubernetes-list-type: atomic
                          taskResults:
                            description: TaskRunResults are the list of results written out by the task's containers
                            type: array
                            items:
                              description: TaskRunResult used to describe the results of a task
                              type: object
                              required:
                                - name
                                - value
                              properties:
                                name:
                                  description: Name the given name
                                  type: string
                                type:
                                  description: |-
                                    Type is the user-specified type of the result. The possible type
                                    is currently "string" and will support "array" in following work.
                                  type: string
                                value:
                                  description: Value the given value of the result
                                  x-kubernetes-preserve-unknown-fields: true
                            x-kubernetes-list-type: atomic
                          taskSpec:
                            description: |-
                              TaskSpec contains the Spec from the dereferenced Task definition used to instantiate this TaskRun.
                              See Task.spec (API version tekton.dev/v1beta1)
                            x-kubernetes-preserve-unknown-fields: true
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
      additionalPrinterColumns:
        - name: Succeeded
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].reason"
        - name: StartTime
          type: date
          jsonPath: .status.startTime
        - name: CompletionTime
          type: date
          jsonPath: .status.completionTime
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: |-
            PipelineRun represents a single execution of a Pipeline. PipelineRuns are how
            the graph of Tasks declared in a Pipeline are executed; they specify inputs
            to Pipelines such as parameter values and capture operational aspects of the
            Tasks execution such as service account and tolerations. Creating a
            PipelineRun creates TaskRuns for Tasks in the referenced Pipeline.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PipelineRunSpec defines the desired state of PipelineRun
              type: object
              properties:
                params:
                  description: Params is a list of parameter names and values.
                  type: array
                  items:
                    description: Param declares an ParamValues to use for the parameter called name.
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                pipelineRef:
                  description: PipelineRef can be used to refer to a specific instance of a Pipeline.
                  type: object
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    name:
                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    params:
                      description: |-
                        Params contains the parameters used to identify the
                        referenced Tekton resource. Example entries might include
                        "repo" or "path" but the set of params ultimately depends on
                        the chosen resolver.
                      type: array
                      items:
                        description: Param declares an ParamValues to use for the parameter called name.
                        type: object
                        required:
                          - name
                          - value
                        properties:
                          name:
                            type: string
                          value:
                            x-kubernetes-preserve-unknown-fields: true
                      x-kubernetes-list-type: atomic
                    resolver:
                      description: |-
                        Resolver is the name of the resolver that should perform
                        resolution of the referenced Tekton resource, such as "git".
                      type: string
                pipelineSpec:
                  description: |-
                    Specifying PipelineSpec can be disabled by setting
                    `disable-inline-spec` feature flag.
                    See Pipeline.spec (API version: tekton.dev/v1)
                  x-kubernetes-preserve-unknown-fields: true
                status:
                  description: Used for cancelling a pipelinerun (and maybe more later on)
                  type: string
                taskRunSpecs:
                  description: TaskRunSpecs holds a set of runtime specs
                  type: array
                  items:
                    description: |-
                      PipelineTaskRunSpec  can be used to configure specific
                      specs for a concrete Task
                    type: object
                    properties:
                      computeResources:
                        description: Compute resources to use for this TaskRun
                        type: object
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            type: array
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          limits:
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              anyOf:
                                - type: integer
                                - type: string
                              x-kubernetes-int-or-string: true
                          requests:
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                            additionalProperties:
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              anyOf:
                                - type: integer
                                - type: string
                              x-kubernetes-int-or-string: true
                      metadata:
                        description: PipelineTaskMetadata contains the labels or annotations for an EmbeddedTask
                        type: object
                        properties:
                          annotations:
                            type: object
                            additionalProperties:
                              type: string
                          labels:
                            type: object
                            additionalProperties:
                              type: string
                      pipelineTaskName:
                        type: string
                      podTemplate:
                        description: PodTemplate holds pod specific configuration
                        type: object
                        properties:
                          affinity:
                            description: |-
                              If specified, the pod's scheduling constraints.
                              See Pod.spec.affinity (API version: v1)
                            x-kubernetes-preserve-unknown-fields: true
                          automountServiceAccountToken:
                            description: |-
                              AutomountServiceAccountToken indicates whether pods running as this
                              service account should have an API token automatically mounted.
                            type: boolean
                          dnsConfig:
                            description: |-
                              Specifies the DNS parameters of a pod.
                              Parameters specified here will be merged to the generated DNS
                              configuration based on DNSPolicy.
                            type: object
                            properties:
                              nameservers:
                                description: |-
                                  A list of DNS name server IP addresses.
                                  This will be appended to the base nameservers generated from DNSPolicy.
                                  Duplicated nameservers will be removed.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              options:
                                description: |-
                                  A list of DNS resolver options.
                                  This will be merged with the base options generated from DNSPolicy.
                                  Duplicated entries will be removed. Resolution options given in Options
                                  will override those that appear in the base DNSPolicy.
                                type: array
                                items:
                                  description: PodDNSConfigOption defines DNS resolver options of a pod.
                                  type: object
                                  properties:
                                    name:
                                      description: Required.
                                      type: string
                                    value:
                                      type: string
                                x-kubernetes-list-type: atomic
                              searches:
                                description: |-
                                  A list of DNS search domains for host-name lookup.
                                  This will be appended to the base search paths generated from DNSPolicy.
                                  Duplicated search paths will be removed.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                          dnsPolicy:
                            description: |-
                              Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                              'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                              will be merged with the policy selected with DNSPolicy.
                            type: string
                          enableServiceLinks:
                            description: |-
                              EnableServiceLinks indicates whether information about services should be injected into pod's
                              environment variables, matching the syntax of Docker links.
                              Optional: Defaults to true.
                            type: boolean
                          env:
                            description: List of environment variables that can be provided to the containers belonging to the pod.
                            type: array
                            items:
                              description: EnvVar represents an environment variable present in a Container.
                              type: object
                              required:
                                - name
                              properties:
                                name:
                                  description: Name of the environment variable. Must be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: |-
                                    Variable references $(VAR_NAME) are expanded
                                    using the previously defined environment variables in the container and
                                    any service environment variables. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                    "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless of whether the variable
                                    exists or not.
                                    Defaults to "".
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's value. Cannot be used if value is not empty.
                                  type: object
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                          default: ""
                                        optional:
                                          description: Specify whether the ConfigMap or its key must be defined
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                                    fieldRef:
                                      description: |-
                                        Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                        spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                      type: object
                                      required:
                                        - fieldPath
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in the specified API version.
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    resourceFieldRef:
                                      description: |-
                                        Selects a resource of the container: only resources limits and requests
                                        (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                      type: object
                                      required:
                                        - resource
                                      properties:
                                        containerName:
                                          description: 'Container name: required for volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          description: Specifies the output format of the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      x-kubernetes-map-type: atomic
                                    secretKeyRef:
                                      description: Selects a key of a secret in the pod's namespace
                                      type: object
                                      required:
                                        - key
                                      properties:
                                        key:
                                          description: The key of the secret to select from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                          default: ""
                                        optional:
                                          description: Specify whether the Secret or its key must be defined
                                          type: boolean
                                      x-kubernetes-map-type: atomic
                            x-kubernetes-list-type: atomic
                          hostAliases:
                            description: |-
                              HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                              file if specified. This is only valid for non-hostNetwork pods.
                            type: array
                            items:
                              description: |-
                                HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                pod's hosts file.
                              type: object
                              required:
                                - ip
                              properties:
                                hostnames:
                                  description: Hostnames for the above IP address.
                                  type: array
                                  items:
                                    type: string
                                  x-kubernetes-list-type: atomic
                                ip:
                                  description: IP address of the host file entry.
                                  type: string
                            x-kubernetes-list-type: atomic
                          hostNetwork:
                            description: HostNetwork specifies whether the pod may use the node network namespace
                            type: boolean
                          imagePullSecrets:
                            description: ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified
                            type: array
                            items:
                              description: |-
                                LocalObjectReference contains enough information to let you locate the
                                referenced object inside the same namespace.
                              type: object
                              properties:
                                name:
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                  default: ""
                              x-kubernetes-map-type: atomic
                            x-kubernetes-list-type: atomic
                          nodeSelector:
                            description: |-
                              NodeSelector is a selector which must be true for the pod to fit on a node.
                              Selector which must match a node's labels for the pod to be scheduled on that node.
                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            type: object
                            additionalProperties:
                              type: string
                          priorityClassName:
                            description: |-
                              If specified, indicates the pod's priority. "system-node-critical" and
                              "system-cluster-critical" are two special keywords which indicate the
                              highest priorities with the former being the highest priority. Any other
                              name must be defined by creating a PriorityClass object with that name.
                              If not specified, the pod priority will be default or zero if there is no
                              default.
                            type: string
                          runtimeClassName:
                            description: |-
                              RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                              group, which should be used to run this pod. If no RuntimeClass resource
                              matches the named class, the pod will not be run. If unset or empty, the
                              "legacy" RuntimeClass will be used, which is an implicit class with an
                              empty definition that uses the default runtime handler.
                              More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                              This is a beta feature as of Kubernetes v1.14.
                            type: string
                          schedulerName:
                            description: SchedulerName specifies the scheduler to be used to dispatch the Pod
                            type: string
                          securityContext:
                            description: |-
                              SecurityContext holds pod-level security attributes and common container settings.
                              Optional: Defaults to empty.  See type description for default values of each field.
                            type: object
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: integer
                                format: int64
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                properties:
                                  level:
                                    description: Level is SELinux level label that applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that applies to the container.
                                    type: string
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: object
                                required:
                                  - type
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: array
                                items:
                                  type: integer
                                  format: int64
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: array
                                items:
                                  description: Sysctl defines a kernel parameter to be set
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                type: object
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                          tolerations:
                            description: If specified, the pod's tolerations.
                            type: array
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              type: object
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  type: integer
                                  format: int64
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                            x-kubernetes-list-type: atomic
                          topologySpreadConstraints:
                            description: |-
                              TopologySpreadConstraints controls how Pods are spread across your cluster among
                              failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                            type: array
                            items:
                              description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                              type: object
                              required:
                                - maxSkew
                                - topologyKey
                                - whenUnsatisfiable
                              properties:
                                labelSelector:
                                  description: |-
                                    LabelSelector is used to find matching pods.
                                    Pods that match this label selector are counted to determine the number of pods
                                    in their corresponding topology domain.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      type: array
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        type: object
                                        required:
                                          - key
                                          - operator
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                            x-kubernetes-list-type: atomic
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select the pods over which
                                    spreading will be calculated. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are ANDed with labelSelector
                                    to select the group of existing pods over which spreading will be calculated
                                    for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    Keys that don't exist in the incoming pod labels will
                                    be ignored. A null or empty list means only match against labelSelector.

                                    This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                  type: array
                                  items:
                                    type: string
                                  x-kubernetes-list-type: atomic
                                maxSkew:
                                  description: |-
                                    MaxSkew describes the degree to which pods may be unevenly distributed.
                                    When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                    between the number of matching pods in the target topology and the global minimum.
                                    The global minimum is the minimum number of matching pods in an eligible domain
                                    or zero if the number of eligible domains is less than MinDomains.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 2/2/1:
                                    In this case, the global minimum is 1.
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |   P   |
                                    - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                    scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1).
                                    - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                    When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                    to topologies that satisfy it.
                                    It's a required field. Default value is 1 and 0 is not allowed.
                                  type: integer
                                  format: int32
                                minDomains:
                                  description: |-
                                    MinDomains indicates a minimum number of eligible domains.
                                    When the number of eligible domains with matching topology keys is less than minDomains,
                                    Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                    And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                    this value has no effect on scheduling.
                                    As a result, when the number of eligible domains is less than minDomains,
                                    scheduler won't schedule more than maxSkew Pods to those domains.
                                    If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                    Valid values are integers greater than 0.
                                    When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                    For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2:
                                    | zone1 | zone2 | zone3 |
                                    |  P P  |  P P  |  P P  |
                                    The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                    In this situation, new pod with the same labelSelector cannot be scheduled,
                                    because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                    it will violate MaxSkew.
                                  type: integer
                                  format: int32
                                nodeAffinityPolicy:
                                  description: |-
                                    NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                    when calculating pod topology spread skew. Options are:
                                    - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                    - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                    If this value is nil, the behavior is equivalent to the Honor policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                nodeTaintsPolicy:
                                  description: |-
                                    NodeTaintsPolicy indicates how we will treat node taints when calculating
                                    pod topology spread skew. Options are:
                                    - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                    has a toleration, are included.
                                    - Ignore: node taints are ignored. All nodes are included.

                                    If this value is nil, the behavior is equivalent to the Ignore policy.
                                    This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                  type: string
                                topologyKey:
                                  description: |-
                                    TopologyKey is the key of node labels. Nodes that have a label with this key
                                    and identical values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and try to put balanced number
                                    of pods into each bucket.
                                    We define a domain as a particular instance of a topology.
                                    Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                    nodeAffinityPolicy and nodeTaintsPolicy.
                                    e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                    And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                    It's a required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: |-
                                    WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                    the spread constraint.
                                    - DoNotSchedule (default) tells the scheduler not to schedule it.
                                    - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                      but giving higher precedence to topologies that would help reduce the
                                      skew.
                                    A constraint is considered "Unsatisfiable" for an incoming pod
                                    if and only if every possible node assignment for that pod would violate
                                    "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                    labelSelector spread as 3/1/1:
                                    | zone1 | zone2 | zone3 |
                                    | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                    to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                    MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                    won't make it *more* imbalanced.
                                    It's a required field.
                                  type: string
                            x-kubernetes-list-type: atomic
                          volumes:
                            description: |-
                              List of volumes that can be mounted by containers belonging to the pod.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes
                              See Pod.spec.volumes (API version: v1)
                            x-kubernetes-preserve-unknown-fields: true
                      serviceAccountName:
                        type: string
                      sidecarSpecs:
                        type: array
                        items:
                          description: TaskRunSidecarSpec is used to override the values of a Sidecar in the corresponding Task.
                          type: object
                          required:
                            - computeResources
                            - name
                          properties:
                            computeResources:
                              description: The resource requirements to apply to the Sidecar.
                              type: object
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  type: array
                                  items:
                                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                      request:
                                        description: |-
                                          Request is the name chosen for a request in the referenced claim.
                                          If empty, everything from the claim is made available, otherwise
                                          only the result of this request.
                                        type: string
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                limits:
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                requests:
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                            name:
                              description: The name of the Sidecar to override.
                              type: string
                        x-kubernetes-list-type: atomic
                      stepSpecs:
                        type: array
                        items:
                          description: TaskRunStepSpec is used to override the values of a Step in the corresponding Task.
                          type: object
                          required:
                            - computeResources
                            - name
                          properties:
                            computeResources:
                              description: The resource requirements to apply to the Step.
                              type: object
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  type: array
                                  items:
                                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                      request:
                                        description: |-
                                          Request is the name chosen for a request in the referenced claim.
                                          If empty, everything from the claim is made available, otherwise
                                          only the result of this request.
                                        type: string
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                limits:
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                requests:
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                  additionalProperties:
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                            name:
                              description: The name of the Step to override.
                              type: string
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                taskRunTemplate:
                  description: TaskRunTemplate represent template of taskrun
                  type: object
                  properties:
                    podTemplate:
                      description: PodTemplate holds pod specific configuration
                      type: object
                      properties:
                        affinity:
                          description: |-
                            If specified, the pod's scheduling constraints.
                            See Pod.spec.affinity (API version: v1)
                          x-kubernetes-preserve-unknown-fields: true
                        automountServiceAccountToken:
                          description: |-
                            AutomountServiceAccountToken indicates whether pods running as this
                            service account should have an API token automatically mounted.
                          type: boolean
                        dnsConfig:
                          description: |-
                            Specifies the DNS parameters of a pod.
                            Parameters specified here will be merged to the generated DNS
                            configuration based on DNSPolicy.
                          type: object
                          properties:
                            nameservers:
                              description: |-
                                A list of DNS name server IP addresses.
                                This will be appended to the base nameservers generated from DNSPolicy.
                                Duplicated nameservers will be removed.
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                            options:
                              description: |-
                                A list of DNS resolver options.
                                This will be merged with the base options generated from DNSPolicy.
                                Duplicated entries will be removed. Resolution options given in Options
                                will override those that appear in the base DNSPolicy.
                              type: array
                              items:
                                description: PodDNSConfigOption defines DNS resolver options of a pod.
                                type: object
                                properties:
                                  name:
                                    description: Required.
                                    type: string
                                  value:
                                    type: string
                              x-kubernetes-list-type: atomic
                            searches:
                              description: |-
                                A list of DNS search domains for host-name lookup.
                                This will be appended to the base search paths generated from DNSPolicy.
                                Duplicated search paths will be removed.
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        dnsPolicy:
                          description: |-
                            Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are
                            'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig
                            will be merged with the policy selected with DNSPolicy.
                          type: string
                        enableServiceLinks:
                          description: |-
                            EnableServiceLinks indicates whether information about services should be injected into pod's
                            environment variables, matching the syntax of Docker links.
                            Optional: Defaults to true.
                          type: boolean
                        env:
                          description: List of environment variables that can be provided to the containers belonging to the pod.
                          type: array
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                type: object
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                        default: ""
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    type: object
                                    required:
                                      - resource
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                        default: ""
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                                    x-kubernetes-map-type: atomic
                          x-kubernetes-list-type: atomic
                        hostAliases:
                          description: |-
                            HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                            file if specified. This is only valid for non-hostNetwork pods.
                          type: array
                          items:
                            description: |-
                              HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                              pod's hosts file.
                            type: object
                            required:
                              - ip
                            properties:
                              hostnames:
                                description: Hostnames for the above IP address.
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              ip:
                                description: IP address of the host file entry.
                                type: string
                          x-kubernetes-list-type: atomic
                        hostNetwork:
                          description: HostNetwork specifies whether the pod may use the node network namespace
                          type: boolean
                        imagePullSecrets:
                          description: ImagePullSecrets gives the name of the secret used by the pod to pull the image if specified
                          type: array
                          items:
                            description: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                            type: object
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                                default: ""
                            x-kubernetes-map-type: atomic
                          x-kubernetes-list-type: atomic
                        nodeSelector:
                          description: |-
                            NodeSelector is a selector which must be true for the pod to fit on a node.
                            Selector which must match a node's labels for the pod to be scheduled on that node.
                            More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                          type: object
                          additionalProperties:
                            type: string
                        priorityClassName:
                          description: |-
                            If specified, indicates the pod's priority. "system-node-critical" and
                            "system-cluster-critical" are two special keywords which indicate the
                            highest priorities with the former being the highest priority. Any other
                            name must be defined by creating a PriorityClass object with that name.
                            If not specified, the pod priority will be default or zero if there is no
                            default.
                          type: string
                        runtimeClassName:
                          description: |-
                            RuntimeClassName refers to a RuntimeClass object in the node.k8s.io
                            group, which should be used to run this pod. If no RuntimeClass resource
                            matches the named class, the pod will not be run. If unset or empty, the
                            "legacy" RuntimeClass will be used, which is an implicit class with an
                            empty definition that uses the default runtime handler.
                            More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
                            This is a beta feature as of Kubernetes v1.14.
                          type: string
                        schedulerName:
                          description: SchedulerName specifies the scheduler to be used to dispatch the Pod
                          type: string
                        securityContext:
                          description: |-
                            SecurityContext holds pod-level security attributes and common container settings.
                            Optional: Defaults to empty.  See type description for default values of each field.
                          type: object
                          properties:
                            appArmorProfile:
                              description: |-
                                appArmorProfile is the AppArmor options to use by the containers in this pod.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: object
                              required:
                                - type
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile loaded on the node that should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must match the loaded name of the profile.
                                    Must be set if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of AppArmor profile will be applied.
                                    Valid options are:
                                      Localhost - a profile pre-loaded on the node.
                                      RuntimeDefault - the container runtime's default profile.
                                      Unconfined - no AppArmor enforcement.
                                  type: string
                            fsGroup:
                              description: |-
                                A special supplemental group that applies to all containers in a pod.
                                Some volume types allow the Kubelet to change the ownership of that volume
                                to be owned by the pod:

                                1. The owning GID will be the FSGroup
                                2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                3. The permission bits are OR'd with rw-rw----

                                If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            fsGroupChangePolicy:
                              description: |-
                                fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                before being exposed inside Pod. This field will only apply to
                                volume types which support fsGroup based ownership(and permissions).
                                It will have no effect on ephemeral volume types such as: secret, configmaps
                                and emptydir.
                                Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: integer
                              format: int64
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to all containers.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in SecurityContext.  If set in
                                both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                takes precedence for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: object
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                            seccompProfile:
                              description: |-
                                The seccomp options to use by the containers in this pod.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: object
                              required:
                                - type
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:

                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                            supplementalGroups:
                              description: |-
                                A list of groups applied to the first process run in each container, in
                                addition to the container's primary GID and fsGroup (if specified).  If
                                the SupplementalGroupsPolicy feature is enabled, the
                                supplementalGroupsPolicy field determines whether these are in addition
                                to or instead of any group memberships defined in the container image.
                                If unspecified, no additional groups are added, though group memberships
                                defined in the container image may still be used, depending on the
                                supplementalGroupsPolicy field.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: array
                              items:
                                type: integer
                                format: int64
                              x-kubernetes-list-type: atomic
                            supplementalGroupsPolicy:
                              description: |-
                                Defines how supplemental groups of the first container processes are calculated.
                                Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                and the container runtime must implement support for this feature.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            sysctls:
                              description: |-
                                Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                sysctls (by the container runtime) might fail to launch.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: array
                              items:
                                description: Sysctl defines a kernel parameter to be set
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name of a property to set
                                    type: string
                                  value:
                                    description: Value of a property to set
                                    type: string
                              x-kubernetes-list-type: atomic
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options within a container's SecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              type: object
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                        tolerations:
                          description: If specified, the pod's tolerations.
                          type: array
                          items:
                            description: |-
                              The pod this Toleration is attached to tolerates any taint that matches
                              the triple <key,value,effect> using the matching operator <operator>.
                            type: object
                            properties:
                              effect:
                                description: |-
                                  Effect indicates the taint effect to match. Empty means match all taint effects.
                                  When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: |-
                                  Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                  If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: |-
                                  Operator represents a key's relationship to the value.
                                  Valid operators are Exists and Equal. Defaults to Equal.
                                  Exists is equivalent to wildcard for value, so that a pod can
                                  tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: |-
                                  TolerationSeconds represents the period of time the toleration (which must be
                                  of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                  it is not set, which means tolerate the taint forever (do not evict). Zero and
                                  negative values will be treated as 0 (evict immediately) by the system.
                                type: integer
                                format: int64
                              value:
                                description: |-
                                  Value is the taint value the toleration matches to.
                                  If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                          x-kubernetes-list-type: atomic
                        topologySpreadConstraints:
                          description: |-
                            TopologySpreadConstraints controls how Pods are spread across your cluster among
                            failure-domains such as regions, zones, nodes, and other user-defined topology domains.
                          type: array
                          items:
                            description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                            type: object
                            required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                            properties:
                              labelSelector:
                                description: |-
                                  LabelSelector is used to find matching pods.
                                  Pods that match this label selector are counted to determine the number of pods
                                  in their corresponding topology domain.
                                type: object
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type: array
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      type: object
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          type: array
                                          items:
                                            type: string
                                          x-kubernetes-list-type: atomic
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                    additionalProperties:
                                      type: string
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select the pods over which
                                  spreading will be calculated. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are ANDed with labelSelector
                                  to select the group of existing pods over which spreading will be calculated
                                  for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                  MatchLabelKeys cannot be set when LabelSelector isn't set.
                                  Keys that don't exist in the incoming pod labels will
                                  be ignored. A null or empty list means only match against labelSelector.

                                  This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                type: array
                                items:
                                  type: string
                                x-kubernetes-list-type: atomic
                              maxSkew:
                                description: |-
                                  MaxSkew describes the degree to which pods may be unevenly distributed.
                                  When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                  between the number of matching pods in the target topology and the global minimum.
                                  The global minimum is the minimum number of matching pods in an eligible domain
                                  or zero if the number of eligible domains is less than MinDomains.
                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                  labelSelector spread as 2/2/1:
                                  In this case, the global minimum is 1.
                                  | zone1 | zone2 | zone3 |
                                  |  P P  |  P P  |   P   |
                                  - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                  scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                  violate MaxSkew(1).
                                  - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                  When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                  to topologies that satisfy it.
                                  It's a required field. Default value is 1 and 0 is not allowed.
                                type: integer
                                format: int32
                              minDomains:
                                description: |-
                                  MinDomains indicates a minimum number of eligible domains.
                                  When the number of eligible domains with matching topology keys is less than minDomains,
                                  Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                  And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                  this value has no effect on scheduling.
                                  As a result, when the number of eligible domains is less than minDomains,
                                  scheduler won't schedule more than maxSkew Pods to those domains.
                                  If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                  Valid values are integers greater than 0.
                                  When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                  For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                  labelSelector spread as 2/2/2:
                                  | zone1 | zone2 | zone3 |
                                  |  P P  |  P P  |  P P  |
                                  The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                  In this situation, new pod with the same labelSelector cannot be scheduled,
                                  because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                  it will violate MaxSkew.
                                type: integer
                                format: int32
                              nodeAffinityPolicy:
                                description: |-
                                  NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                  when calculating pod topology spread skew. Options are:
                                  - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                  - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                  If this value is nil, the behavior is equivalent to the Honor policy.
                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                type: string
                              nodeTaintsPolicy:
                                description: |-
                                  NodeTaintsPolicy indicates how we will treat node taints when calculating
                                  pod topology spread skew. Options are:
                                  - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                  has a toleration, are included.
                                  - Ignore: node taints are ignored. All nodes are included.

                                  If this value is nil, the behavior is equivalent to the Ignore policy.
                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                type: string
                              topologyKey:
                                description: |-
                                  TopologyKey is the key of node labels. Nodes that have a label with this key
                                  and identical values are considered to be in the same topology.
                                  We consider each <key, value> as a "bucket", and try to put balanced number
                                  of pods into each bucket.
                                  We define a domain as a particular instance of a topology.
                                  Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                  nodeAffinityPolicy and nodeTaintsPolicy.
                                  e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                  And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                  It's a required field.
                                type: string
                              whenUnsatisfiable:
                                description: |-
                                  WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                  the spread constraint.
                                  - DoNotSchedule (default) tells the scheduler not to schedule it.
                                  - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                    but giving higher precedence to topologies that would help reduce the
                                    skew.
                                  A constraint is considered "Unsatisfiable" for an incoming pod
                                  if and only if every possible node assignment for that pod would violate
                                  "MaxSkew" on some topology.
                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                  labelSelector spread as 3/1/1:
                                  | zone1 | zone2 | zone3 |
                                  | P P P |   P   |   P   |
                                  If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                  to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                  MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                  won't make it *more* imbalanced.
                                  It's a required field.
                                type: string
                          x-kubernetes-list-type: atomic
                        volumes:
                          description: |-
                            List of volumes that can be mounted by containers belonging to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes
                            See Pod.spec.volumes (API version: v1)
                          x-kubernetes-preserve-unknown-fields: true
                    serviceAccountName:
                      type: string
                timeouts:
                  description: |-
                    Time after which the Pipeline times out.
                    Currently three keys are accepted in the map
                    pipeline, tasks and finally
                    with Timeouts.pipeline >= Timeouts.tasks + Timeouts.finally
                  type: object
                  properties:
                    finally:
                      description: Finally sets the maximum allowed duration of this pipeline's finally
                      type: string
                    pipeline:
                      description: Pipeline sets the maximum allowed duration for execution of the entire pipeline. The sum of individual timeouts for tasks and finally must not exceed this value.
                      type: string
                    tasks:
                      description: Tasks sets the maximum allowed duration of this pipeline's tasks
                      type: string
                workspaces:
                  description: |-
                    Workspaces holds a set of workspace bindings that must match names
                    with those declared in the pipeline.
                  type: array
                  items:
                    description: WorkspaceBinding maps a Task's declared workspace to a Volume.
                    type: object
                    required:
                      - name
                    properties:
                      configMap:
                        description: ConfigMap represents a configMap that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items if unspecified, each key-value pair in the Data field of the referenced
                              ConfigMap will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the ConfigMap,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          name:
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                            default: ""
                          optional:
                            description: optional specify whether the ConfigMap or its keys must be defined
                            type: boolean
                        x-kubernetes-map-type: atomic
                      csi:
                        description: CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
                        type: object
                        required:
                          - driver
                        properties:
                          driver:
                            description: |-
                              driver is the name of the CSI driver that handles this volume.
                              Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: |-
                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated CSI driver
                              which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: |-
                              nodePublishSecretRef is a reference to the secret object containing
                              sensitive information to pass to the CSI driver to complete the CSI
                              NodePublishVolume and NodeUnpublishVolume calls.
                              This field is optional, and  may be empty if no secret is required. If the
                              secret object contains more than one secret, all secret references are passed.
                            type: object
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                                default: ""
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: |-
                              readOnly specifies a read-only configuration for the volume.
                              Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            description: |-
                              volumeAttributes stores driver-specific properties that are passed to the CSI
                              driver. Consult your driver's documentation for supported values.
                            type: object
                            additionalProperties:
                              type: string
                      emptyDir:
                        description: |-
                          EmptyDir represents a temporary directory that shares a Task's lifetime.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          Either this OR PersistentVolumeClaim can be used.
                        type: object
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                      name:
                        description: Name is the name of the workspace populated by the volume.
                        type: string
                      persistentVolumeClaim:
                        description: |-
                          PersistentVolumeClaimVolumeSource represents a reference to a
                          PersistentVolumeClaim in the same namespace. Either this OR EmptyDir can be used.
                        type: object
                        required:
                          - claimName
                        properties:
                          claimName:
                            description: |-
                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: string
                          readOnly:
                            description: |-
                              readOnly Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                      projected:
                        description: Projected represents a projected volume that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode are the mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          sources:
                            description: |-
                              sources is the list of volume projections. Each entry in this list
                              handles one source.
                            type: array
                            items:
                              description: |-
                                Projection that may be projected along with other supported volume types.
                                Exactly one of these fields must be set.
                              type: object
                              properties:
                                clusterTrustBundle:
                                  description: |-
                                    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                    of ClusterTrustBundle objects in an auto-updating file.

                                    Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                    ClusterTrustBundle objects can either be selected by name, or by the
                                    combination of signer name and a label selector.

                                    Kubelet performs aggressive normalization of the PEM contents written
                                    into the pod filesystem.  Esoteric PEM features such as inter-block
                                    comments and block headers are stripped.  Certificates are deduplicated.
                                    The ordering of certificates within the file is arbitrary, and Kubelet
                                    may change the order over time.
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    labelSelector:
                                      description: |-
                                        Select all ClusterTrustBundles that match this label selector.  Only has
                                        effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                        interpreted as "match nothing".  If set but empty, interpreted as "match
                                        everything".
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          type: array
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            type: object
                                            required:
                                              - key
                                              - operator
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                type: array
                                                items:
                                                  type: string
                                                x-kubernetes-list-type: atomic
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: |-
                                        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                        with signerName and labelSelector.
                                      type: string
                                    optional:
                                      description: |-
                                        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                        aren't available.  If using name, then the named ClusterTrustBundle is
                                        allowed not to exist.  If using signerName, then the combination of
                                        signerName and labelSelector is allowed to match zero
                                        ClusterTrustBundles.
                                      type: boolean
                                    path:
                                      description: Relative path from the volume root to write the bundle.
                                      type: string
                                    signerName:
                                      description: |-
                                        Select all ClusterTrustBundles that match this signer name.
                                        Mutually-exclusive with name.  The contents of all selected
                                        ClusterTrustBundles will be unified and deduplicated.
                                      type: string
                                configMap:
                                  description: configMap information about the configMap data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional specify whether the ConfigMap or its keys must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI data to project
                                  type: object
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume file
                                      type: array
                                      items:
                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                        type: object
                                        required:
                                          - path
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                            type: object
                                            required:
                                              - fieldPath
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            type: object
                                            required:
                                              - resource
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            x-kubernetes-map-type: atomic
                                      x-kubernetes-list-type: atomic
                                secret:
                                  description: secret information about the secret data to project
                                  type: object
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      type: array
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        type: object
                                        required:
                                          - key
                                          - path
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            type: integer
                                            format: int32
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                      x-kubernetes-list-type: atomic
                                    name:
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                      default: ""
                                    optional:
                                      description: optional field specify whether the Secret or its key must be defined
                                      type: boolean
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                  type: object
                                  required:
                                    - path
                                  properties:
                                    audience:
                                      description: |-
                                        audience is the intended audience of the token. A recipient of a token
                                        must identify itself with an identifier specified in the audience of the
                                        token, and otherwise should reject the token. The audience defaults to the
                                        identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: |-
                                        expirationSeconds is the requested duration of validity of the service
                                        account token. As the token approaches expiration, the kubelet volume
                                        plugin will proactively rotate the service account token. The kubelet will
                                        start trying to rotate the token if the token is older than 80 percent of
                                        its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                        and must be at least 10 minutes.
                                      type: integer
                                      format: int64
                                    path:
                                      description: |-
                                        path is the path relative to the mount point of the file to project the
                                        token into.
                                      type: string
                            x-kubernetes-list-type: atomic
                      secret:
                        description: Secret represents a secret that should populate this workspace.
                        type: object
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is Optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values
                              for mode bits. Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            type: integer
                            format: int32
                          items:
                            description: |-
                              items If unspecified, each key-value pair in the Data field of the referenced
                              Secret will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the Secret,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            type: array
                            items:
                              description: Maps a string key to a path within a volume.
                              type: object
                              required:
                                - key
                                - path
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  type: integer
                                  format: int32
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                            x-kubernetes-list-type: atomic
                          optional:
                            description: optional field specify whether the Secret or its keys must be defined
                            type: boolean
                          secretName:
                            description: |-
                              secretName is the name of the secret in the pod's namespace to use.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: string
                      subPath:
                        description: |-
                          SubPath is optionally a directory on the volume which should be used
                          for this binding (i.e. the volume will be mounted at this sub directory).
                        type: string
                      volumeClaimTemplate:
                        description: |-
                          VolumeClaimTemplate is a template for a claim that will be created in the same namespace.
                          The PipelineRun controller is responsible for creating a unique claim for each instance of PipelineRun.
                          See PersistentVolumeClaim (API version: v1)
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
            status:
              description: PipelineRunStatus defines the observed state of PipelineRun
              type: object
              properties:
                annotations:
                  description: |-
                    Annotations is additional Status fields for the Resource to save some
                    additional State as well as convey more information to the user. This is
                    roughly akin to Annotations on any k8s resource, just the reconciler conveying
                    richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                childReferences:
                  description: list of TaskRun and Run names, PipelineTask names, and API versions/kinds for children of this PipelineRun.
                  type: array
                  items:
                    description: ChildStatusReference is used to point to the statuses of individual TaskRuns and Runs within this PipelineRun.
                    type: object
                    properties:
                      apiVersion:
                        type: string
                      displayName:
                        description: |-
                          DisplayName is a user-facing name of the pipelineTask that may be
                          used to populate a UI.
                        type: string
                      kind:
                        type: string
                      name:
                        description: Name is the name of the TaskRun or Run this is referencing.
                        type: string
                      pipelineTaskName:
                        description: PipelineTaskName is the name of the PipelineTask this is referencing.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                completionTime:
                  description: CompletionTime is the time the PipelineRun completed.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: |-
                      Condition defines a readiness condition for a Knative resource.
                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: |-
                          Severity with which to treat failures of this type of condition.
                          When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                finallyStartTime:
                  description: FinallyStartTime is when all non-finally tasks have been completed and only finally tasks are being executed.
                  type: string
                  format: date-time
                observedGeneration:
                  description: |-
                    ObservedGeneration is the 'Generation' of the Service that
                    was last processed by the controller.
                  type: integer
                  format: int64
                pipelineSpec:
                  description: |-
                    PipelineSpec contains the exact spec used to instantiate the run.
                    See Pipeline.spec (API version: tekton.dev/v1)
                  x-kubernetes-preserve-unknown-fields: true
                provenance:
                  description: Provenance contains some key authenticated metadata about how a software artifact was built (what sources, what inputs/outputs, etc.).
                  type: object
                  properties:
                    featureFlags:
                      description: FeatureFlags identifies the feature flags that were used during the task/pipeline run
                      type: object
                      properties:
                        awaitSidecarReadiness:
                          type: boolean
                        coschedule:
                          type: string
                        disableAffinityAssistant:
                          type: boolean
                        disableCredsInit:
                          type: boolean
                        disableInlineSpec:
                          type: string
                        enableAPIFields:
                          type: string
                        enableArtifacts:
                          type: boolean
                        enableCELInWhenExpression:
                          type: boolean
                        enableConciseResolverSyntax:
                          type: boolean
                        enableKeepPodOnCancel:
                          type: boolean
                        enableKubernetesSidecar:
                          type: boolean
                        enableParamEnum:
                          type: boolean
                        enableProvenanceInStatus:
                          type: boolean
                        enableStepActions:
                          type: boolean
                        enforceNonfalsifiability:
                          type: string
                        maxResultSize:
                          type: integer
                        requireGitSSHSecretKnownHosts:
                          type: boolean
                        resultExtractionMethod:
                          type: string
                        runningInEnvWithInjectedSidecars:
                          type: boolean
                        sendCloudEventsForRuns:
                          type: boolean
                        setSecurityContext:
                          type: boolean
                        setSecurityContextReadOnlyRootFilesystem:
                          type: boolean
                        verificationNoMatchPolicy:
                          description: |-
                            VerificationNoMatchPolicy is the feature flag for "trusted-resources-verification-no-match-policy"
                            VerificationNoMatchPolicy can be set to "ignore", "warn" and "fail" values.
                            ignore: skip trusted resources verification when no matching verification policies found
                            warn: skip trusted resources verification when no matching verification policies found and log a warning
                            fail: fail the taskrun or pipelines run if no matching verification policies found
                          type: string
                    refSource:
                      description: RefSource identifies the source where a remote task/pipeline came from.
                      type: object
                      properties:
                        digest:
                          description: |-
                            Digest is a collection of cryptographic digests for the contents of the artifact specified by URI.
                            Example: {"sha1": "f99d13e554ffcb696dee719fa85b695cb5b0f428"}
                          type: object
                          additionalProperties:
                            type: string
                        entryPoint:
                          description: |-
                            EntryPoint identifies the entry point into the build. This is often a path to a
                            build definition file and/or a target label within that file.
                            Example: "task/git-clone/0.8/git-clone.yaml"
                          type: string
                        uri:
                          description: |-
                            URI indicates the identity of the source of the build definition.
                            Example: "https://github.com/tektoncd/catalog"
                          type: string
                results:
                  description: Results are the list of results written out by the pipeline task's containers
                  type: array
                  items:
                    description: PipelineRunResult used to describe the results of a pipeline
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        description: Name is the result's name as declared by the Pipeline
                        type: string
                      value:
                        description: Value is the result returned from the execution of this PipelineRun
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                skippedTasks:
                  description: list of tasks that were skipped due to when expressions evaluating to false
                  type: array
                  items:
                    description: |-
                      SkippedTask is used to describe the Tasks that were skipped due to their When Expressions
                      evaluating to False. This is a struct because we are looking into including more details
                      about the When Expressions that caused this Task to be skipped.
                    type: object
                    required:
                      - name
                      - reason
                    properties:
                      name:
                        description: Name is the Pipeline Task name
                        type: string
                      reason:
                        description: Reason is the cause of the PipelineTask being skipped.
                        type: string
                      whenExpressions:
                        description: WhenExpressions is the list of checks guarding the execution of the PipelineTask
                        type: array
                        items:
                          description: |-
                            WhenExpression allows a PipelineTask to declare expressions to be evaluated before the Task is run
                            to determine whether the Task should be executed or skipped
                          type: object
                          properties:
                            cel:
                              description: |-
                                CEL is a string of Common Language Expression, which can be used to conditionally execute
                                the task based on the result of the expression evaluation
                                More info about CEL syntax: https://github.com/google/cel-spec/blob/master/doc/langdef.md
                              type: string
                            input:
                              description: Input is the string for guard checking which can be a static input or an output from a parent Task
                              type: string
                            operator:
                              description: Operator that represents an Input's relationship to the values
                              type: string
                            values:
                              description: |-
                                Values is an array of strings, which is compared against the input, for guard checking
                                It must be non-empty
                              type: array
                              items:
                                type: string
                              x-kubernetes-list-type: atomic
                        x-kubernetes-list-type: atomic
                  x-kubernetes-list-type: atomic
                spanContext:
                  description: SpanContext contains tracing span context fields
                  type: object
                  additionalProperties:
                    type: string
                startTime:
                  description: StartTime is the time the PipelineRun is actually started.
                  type: string
                  format: date-time
      additionalPrinterColumns:
        - name: Succeeded
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type==\"Succeeded\")].reason"
        - name: StartTime
          type: date
          jsonPath: .status.startTime
        - name: CompletionTime
          type: date
          jsonPath: .status.completionTime
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
  names:
    kind: PipelineRun
    plural: pipelineruns
    singular: pipelinerun
    categories:
      - tekton
      - tekton-pipelines
    shortNames:
      - pr
      - prs
  scope: Namespaced
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1beta1", "v1"]
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
