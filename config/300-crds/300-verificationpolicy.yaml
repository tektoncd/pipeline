# Copyright 2022 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: verificationpolicies.tekton.dev
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: "devel"
    version: "devel"
spec:
  group: tekton.dev
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: |-
            VerificationPolicy defines the rules to verify Tekton resources.
            VerificationPolicy can config the mapping from resources to a list of public
            keys, so when verifying the resources we can use the corresponding public keys.
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the VerificationPolicy.
              type: object
              required:
                - authorities
                - resources
              properties:
                authorities:
                  description: Authorities defines the rules for validating signatures.
                  type: array
                  items:
                    description: The Authority block defines the keys for validating signatures.
                    type: object
                    required:
                      - name
                    properties:
                      key:
                        description: Key contains the public key to validate the resource.
                        type: object
                        properties:
                          data:
                            description: Data contains the inline public key.
                            type: string
                          hashAlgorithm:
                            description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                            type: string
                          kms:
                            description: |-
                              KMS contains the KMS url of the public key
                              Supported formats differ based on the KMS system used.
                              One example of a KMS url could be:
                              gcpkms://projects/[PROJECT]/locations/[LOCATION]>/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[KEY_VERSION]
                              For more examples please refer https://docs.sigstore.dev/cosign/kms_support.
                              Note that the KMS is not supported yet.
                            type: string
                          secretRef:
                            description: SecretRef sets a reference to a secret with the key.
                            type: object
                            properties:
                              name:
                                description: name is unique within a namespace to reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which the secret name must be unique.
                                type: string
                            x-kubernetes-map-type: atomic
                      name:
                        description: Name is the name for this authority.
                        type: string
                mode:
                  description: |-
                    Mode controls whether a failing policy will fail the taskrun/pipelinerun, or only log the warnings
                    enforce - fail the taskrun/pipelinerun if verification fails (default)
                    warn - don't fail the taskrun/pipelinerun if verification fails but log warnings
                  type: string
                resources:
                  description: |-
                    Resources defines the patterns of resources sources that should be subject to this policy.
                    For example, we may want to apply this Policy from a certain GitHub repo.
                    Then the ResourcesPattern should be valid regex. E.g. If using gitresolver, and we want to config keys from a certain git repo.
                    `ResourcesPattern` can be `https://github.com/tektoncd/catalog.git`, we will use regex to filter out those resources.
                  type: array
                  items:
                    description: ResourcePattern defines the pattern of the resource source
                    type: object
                    required:
                      - pattern
                    properties:
                      pattern:
                        description: |-
                          Pattern defines a resource pattern. Regex is created to filter resources based on `Pattern`
                          Example patterns:
                          GitHub resource: https://github.com/tektoncd/catalog.git, https://github.com/tektoncd/*
                          Bundle resource: gcr.io/tekton-releases/catalog/upstream/git-clone, gcr.io/tekton-releases/catalog/upstream/*
                          Hub resource: https://artifacthub.io/*,
                        type: string
  names:
    kind: VerificationPolicy
    plural: verificationpolicies
    singular: verificationpolicy
    categories:
      - tekton
      - tekton-pipelines
  scope: Namespaced
