# Copyright 2022 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: resolutionrequests.resolution.tekton.dev
  labels:
    resolution.tekton.dev/release: devel
spec:
  group: resolution.tekton.dev
  scope: Namespaced
  names:
    kind: ResolutionRequest
    plural: resolutionrequests
    singular: resolutionrequest
    categories:
      - tekton
      - tekton-pipelines
    shortNames:
      - resolutionrequest
      - resolutionrequests
  versions:
    - name: v1alpha1
      served: true
      deprecated: true
      storage: false
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: |-
            ResolutionRequest is an object for requesting the content of
            a Tekton resource like a pipeline.yaml.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the information for the request part of the resource request.
              type: object
              properties:
                params:
                  description: |-
                    Parameters are the runtime attributes passed to
                    the resolver to help it figure out how to resolve the
                    resource being requested. For example: repo URL, commit SHA,
                    path to file, the kind of authentication to leverage, etc.
                  type: object
                  additionalProperties:
                    type: string
            status:
              description: |-
                Status communicates the state of the request and, ultimately,
                the content of the resolved resource.
              type: object
              required:
                - data
                - refSource
              properties:
                annotations:
                  description: |-
                    Annotations is additional Status fields for the Resource to save some
                    additional State as well as convey more information to the user. This is
                    roughly akin to Annotations on any k8s resource, just the reconciler conveying
                    richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: |-
                      Condition defines a readiness condition for a Knative resource.
                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: |-
                          Severity with which to treat failures of this type of condition.
                          When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                data:
                  description: |-
                    Data is a string representation of the resolved content
                    of the requested resource in-lined into the ResolutionRequest
                    object.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the 'Generation' of the Service that
                    was last processed by the controller.
                  type: integer
                  format: int64
                refSource:
                  description: |-
                    RefSource is the source reference of the remote data that records where the remote
                    file came from including the url, digest and the entrypoint.
                  x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: Succeeded
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"
    - name: v1beta1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: |-
            ResolutionRequest is an object for requesting the content of
            a Tekton resource like a pipeline.yaml.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the information for the request part of the resource request.
              type: object
              properties:
                params:
                  description: |-
                    Parameters are the runtime attributes passed to
                    the resolver to help it figure out how to resolve the
                    resource being requested. For example: repo URL, commit SHA,
                    path to file, the kind of authentication to leverage, etc.
                  type: array
                  items:
                    description: Param declares an ParamValues to use for the parameter called name.
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        x-kubernetes-preserve-unknown-fields: true
                  x-kubernetes-list-type: atomic
                url:
                  description: |-
                    URL is the runtime url passed to the resolver
                    to help it figure out how to resolver the resource being
                    requested.
                    This is currently at an ALPHA stability level and subject to
                    alpha API compatibility policies.
                  type: string
            status:
              description: |-
                Status communicates the state of the request and, ultimately,
                the content of the resolved resource.
              type: object
              required:
                - data
                - refSource
                - source
              properties:
                annotations:
                  description: |-
                    Annotations is additional Status fields for the Resource to save some
                    additional State as well as convey more information to the user. This is
                    roughly akin to Annotations on any k8s resource, just the reconciler conveying
                    richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: |-
                      Condition defines a readiness condition for a Knative resource.
                      See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time the condition transitioned from one status to another.
                          We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                          differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: |-
                          Severity with which to treat failures of this type of condition.
                          When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                data:
                  description: |-
                    Data is a string representation of the resolved content
                    of the requested resource in-lined into the ResolutionRequest
                    object.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the 'Generation' of the Service that
                    was last processed by the controller.
                  type: integer
                  format: int64
                refSource:
                  description: |-
                    RefSource is the source reference of the remote data that records the url, digest
                    and the entrypoint.
                  x-kubernetes-preserve-unknown-fields: true
                source:
                  description: 'Deprecated: Use RefSource instead'
                  x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: OwnerKind
          type: string
          jsonPath: ".metadata.ownerReferences[0].kind"
        - name: Owner
          type: string
          jsonPath: ".metadata.ownerReferences[0].name"
        - name: Succeeded
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"
        - name: StartTime
          type: string
          jsonPath: .metadata.creationTimestamp
        - name: EndTime
          type: string
          jsonPath: .status.conditions[?(@.type=='Succeeded')].lastTransitionTime
  conversion:
    strategy: Webhook
    webhook:
      conversionReviewVersions: ["v1alpha1", "v1beta1"]
      clientConfig:
        service:
          name: tekton-pipelines-webhook
          namespace: tekton-pipelines
